# The proguard configuration file for the following section is C:\Program Files (x86)\Android\android-sdk\tools\proguard\proguard-android.txt
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# This file is no longer maintained and is not used by new (2.2+) versions of the
# Android plugin for Gradle. Instead, the Android plugin for Gradle generates the
# default rules at build time and stores them in the build directory.

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize and preverify steps (and performs some
# of these optimizations on its own).
-dontoptimize
-dontpreverify
# Note that if you want to enable optimization, you cannot just
# include optimization flags in your own project configuration file;
# instead you will need to point to the
# "proguard-android-optimize.txt" file instead of this one from your
# project.properties file.

-keepattributes *Annotation*
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames class * {
    native <methods>;
}

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator CREATOR;
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
-dontwarn android.support.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# End of content from C:\Program Files (x86)\Android\android-sdk\tools\proguard\proguard-android.txt
# The proguard configuration file for the following section is obj\Release\net8.0-android\proguard\proguard_xamarin.cfg
# This is Xamarin-specific (and enhanced) configuration.

-dontobfuscate

-keep class android.support.multidex.MultiDexApplication { <init>(); }
-keep class com.xamarin.java_interop.** { *; <init>(); }
-keep class mono.MonoRuntimeProvider* { *; <init>(...); }
-keep class mono.MonoPackageManager { *; <init>(...); }
-keep class mono.MonoPackageManager_Resources { *; <init>(...); }
-keep class mono.android.** { *; <init>(...); }
-keep class mono.java.** { *; <init>(...); }
-keep class mono.javax.** { *; <init>(...); }
-keep class opentk.platform.android.AndroidGameView { *; <init>(...); }
-keep class opentk.GameViewBase { *; <init>(...); }
-keep class opentk_1_0.platform.android.AndroidGameView { *; <init>(...); }
-keep class opentk_1_0.GameViewBase { *; <init>(...); }
-keep class com.xamarin.java_interop.ManagedPeer { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_TrustManager { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_TrustManager_FakeSSLSession { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_AlwaysAcceptingHostnameVerifier { *; <init>(...); }

-keep class android.runtime.** { <init>(...); }
-keep class assembly_mono_android.android.runtime.** { <init>(...); }
# hash for android.runtime and assembly_mono_android.android.runtime.
-keep class md52ce486a14f4bcd95899665e9d932190b.** { *; <init>(...); }
-keepclassmembers class md52ce486a14f4bcd95899665e9d932190b.** { *; <init>(...); }

# .NET 8 runtime
-keep class net.dot.android.crypto.DotnetProxyTrustManager { *; <init>(...); }

# Android's template misses fluent setters...
-keepclassmembers class * extends android.view.View {
   *** set*(...);
}

# also misses those inflated custom layout stuff from xml...
-keepclassmembers class * extends android.view.View {
   <init>(android.content.Context,android.util.AttributeSet);
   <init>(android.content.Context,android.util.AttributeSet,int);
}
-ignorewarnings
-keepattributes SourceFile
-keepattributes LineNumberTable
-printmapping "C:\ProjectsVS2022Preview\NavigationGraph8Net8\bin\Release\net8.0-android\mapping.txt"

# End of content from obj\Release\net8.0-android\proguard\proguard_xamarin.cfg
# The proguard configuration file for the following section is obj\Release\net8.0-android\android-arm64\proguard\proguard_project_references.cfg
# ACW for NavigationGraph8Net8
# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$Obsolete
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Obsolete {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.CheckReturnValue
-keepclassmembers class org.jetbrains.annotations.CheckReturnValue {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

# ACW for Xamarin.Kotlin.StdLib.Common
# ACW for Xamarin.Kotlin.StdLib.Jdk7
# ACW for Xamarin.Kotlin.StdLib.Jdk8
# ACW for Xamarin.KotlinX.Coroutines.Android
-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   <init>(...);
   *** delay(...);
   *** invokeOnTimeout(...);
   *** scheduleResumeAfterDelay(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   *** getImmediate(...);
   *** scheduleResumeAfterDelay(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcherKt
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcherKt {
   *** awaitFrame(...);
   *** from(...);
   *** from(...);
}

# ACW for Xamarin.KotlinX.Coroutines.Core.Jvm
-keep class kotlinx.coroutines.flow.Flow
-keepclassmembers class kotlinx.coroutines.flow.Flow {
}

-keep class kotlinx.coroutines.flow.FlowCollector
-keepclassmembers class kotlinx.coroutines.flow.FlowCollector {
}

-keep class kotlinx.coroutines.flow.SharedFlow
-keepclassmembers class kotlinx.coroutines.flow.SharedFlow {
}

-keep class kotlinx.coroutines.flow.StateFlow
-keepclassmembers class kotlinx.coroutines.flow.StateFlow {
}

# ACW for Mono.Android.Export
# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getFullyDrawnReporter(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnConfigurationChangedListener(...);
   *** addOnContextAvailableListener(...);
   *** addOnMultiWindowModeChangedListener(...);
   *** addOnNewIntentListener(...);
   *** addOnPictureInPictureModeChangedListener(...);
   *** addOnTrimMemoryListener(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnConfigurationChangedListener(...);
   *** removeOnContextAvailableListener(...);
   *** removeOnMultiWindowModeChangedListener(...);
   *** removeOnNewIntentListener(...);
   *** removeOnPictureInPictureModeChangedListener(...);
   *** removeOnTrimMemoryListener(...);
}

-keep class androidx.activity.ComponentDialog
-keepclassmembers class androidx.activity.ComponentDialog {
   <init>(...);
   <init>(...);
   *** getLifecycle(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getOnBackPressedDispatcher(...);
}

-keep class androidx.activity.FullyDrawnReporter
-keepclassmembers class androidx.activity.FullyDrawnReporter {
   <init>(...);
   *** isFullyDrawnReported(...);
   *** addOnReportDrawnListener(...);
   *** addReporter(...);
   *** fullyDrawnReported(...);
   *** removeOnReportDrawnListener(...);
   *** removeReporter(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResult
-keepclassmembers class androidx.activity.result.ActivityResult {
   <init>(...);
   *** getData(...);
   *** getResultCode(...);
   *** describeContents(...);
   *** resultCodeToString(...);
   *** writeToParcel(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult {
   <init>(...);
   *** createIntent(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContracts
-keepclassmembers class androidx.activity.result.contract.ActivityResultContracts {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onLocalesChanged(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getApplicationLocales(...);
   *** setApplicationLocales(...);
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getContextForDelegate(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatDialogFragment
-keepclassmembers class androidx.appcompat.app.AppCompatDialogFragment {
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBackInvokedCallbackEnabled(...);
   *** setBackInvokedCallbackEnabled(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** invalidateMenu(...);
   *** onLayout(...);
   *** removeMenuProvider(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbPosition(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setEnforceSwitchWidth(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Preference
-keep class androidx.preference.CheckBoxPreference
-keepclassmembers class androidx.preference.CheckBoxPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.preference.DialogPreference
-keepclassmembers class androidx.preference.DialogPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDialogIcon(...);
   *** setDialogIcon(...);
   *** getDialogLayoutResource(...);
   *** setDialogLayoutResource(...);
   *** getDialogMessage(...);
   *** setDialogMessage(...);
   *** getDialogTitle(...);
   *** setDialogTitle(...);
   *** getNegativeButtonText(...);
   *** setNegativeButtonText(...);
   *** getPositiveButtonText(...);
   *** setPositiveButtonText(...);
   *** setDialogIcon(...);
   *** setDialogMessage(...);
   *** setDialogTitle(...);
   *** setNegativeButtonText(...);
   *** setPositiveButtonText(...);
}

-keep class androidx.preference.DialogPreference
-keepclassmembers class androidx.preference.DialogPreference {
}

-keep class androidx.preference.ListPreference
-keepclassmembers class androidx.preference.ListPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getEntry(...);
   *** getValue(...);
   *** setValue(...);
   *** findIndexOfValue(...);
   *** getEntries(...);
   *** getEntryValues(...);
   *** setEntries(...);
   *** setEntries(...);
   *** setEntryValues(...);
   *** setEntryValues(...);
   *** setValueIndex(...);
}

-keep class androidx.preference.Preference$OnPreferenceChangeListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceChangeListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor {
}

-keep class androidx.preference.Preference$OnPreferenceClickListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceClickListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor {
}

-keep class androidx.preference.Preference$SummaryProvider
-keepclassmembers class androidx.preference.Preference$SummaryProvider {
}

-keep class androidx.preference.Preference
-keepclassmembers class androidx.preference.Preference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** isCopyingEnabled(...);
   *** setCopyingEnabled(...);
   *** getDependency(...);
   *** setDependency(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getExtras(...);
   *** getFragment(...);
   *** setFragment(...);
   *** hasKey(...);
   *** getIcon(...);
   *** setIcon(...);
   *** isIconSpaceReserved(...);
   *** setIconSpaceReserved(...);
   *** getIntent(...);
   *** setIntent(...);
   *** isShown(...);
   *** getKey(...);
   *** setKey(...);
   *** getLayoutResource(...);
   *** setLayoutResource(...);
   *** getOnPreferenceChangeListener(...);
   *** setOnPreferenceChangeListener(...);
   *** getOnPreferenceClickListener(...);
   *** setOnPreferenceClickListener(...);
   *** getOrder(...);
   *** setOrder(...);
   *** getParent(...);
   *** isPersistent(...);
   *** setPersistent(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceManager(...);
   *** isSelectable(...);
   *** setSelectable(...);
   *** getSharedPreferences(...);
   *** getShouldDisableView(...);
   *** setShouldDisableView(...);
   *** isSingleLineTitle(...);
   *** setSingleLineTitle(...);
   *** getSummary(...);
   *** setSummary(...);
   *** getSummaryProvider(...);
   *** setSummaryProvider(...);
   *** getTitle(...);
   *** setTitle(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidgetLayoutResource(...);
   *** setWidgetLayoutResource(...);
   *** callChangeListener(...);
   *** compareTo(...);
   *** findPreferenceInHierarchy(...);
   *** getPersistedBoolean(...);
   *** getPersistedFloat(...);
   *** getPersistedInt(...);
   *** getPersistedLong(...);
   *** getPersistedString(...);
   *** getPersistedStringSet(...);
   *** notifyChanged(...);
   *** notifyDependencyChange(...);
   *** notifyHierarchyChanged(...);
   *** onAttached(...);
   *** onAttachedToHierarchy(...);
   *** onAttachedToHierarchy(...);
   *** onBindViewHolder(...);
   *** onClick(...);
   *** onDependencyChanged(...);
   *** onDetached(...);
   *** onGetDefaultValue(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onParentChanged(...);
   *** onPrepareForRemoval(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSetInitialValue(...);
   *** onSetInitialValue(...);
   *** peekExtras(...);
   *** performClick(...);
   *** performClick(...);
   *** persistBoolean(...);
   *** persistFloat(...);
   *** persistInt(...);
   *** persistLong(...);
   *** persistString(...);
   *** persistStringSet(...);
   *** restoreHierarchyState(...);
   *** saveHierarchyState(...);
   *** setDefaultValue(...);
   *** setIcon(...);
   *** setSummary(...);
   *** setTitle(...);
   *** setViewId(...);
   *** shouldDisableDependents(...);
   *** shouldPersist(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
   <init>(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getString(...);
   *** getStringSet(...);
   *** putBoolean(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putString(...);
   *** putStringSet(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   <init>(...);
   *** getCallbackFragment(...);
   *** getListView(...);
   *** getPreferenceManager(...);
   *** getPreferenceScreen(...);
   *** setPreferenceScreen(...);
   *** addPreferencesFromResource(...);
   *** findPreference(...);
   *** onBindPreferences(...);
   *** onCreateAdapter(...);
   *** onCreateLayoutManager(...);
   *** onCreatePreferences(...);
   *** onCreateRecyclerView(...);
   *** onDisplayPreferenceDialog(...);
   *** onNavigateToScreen(...);
   *** onPreferenceTreeClick(...);
   *** onUnbindPreferences(...);
   *** scrollToPreference(...);
   *** scrollToPreference(...);
   *** setDivider(...);
   *** setDividerHeight(...);
   *** setPreferencesFromResource(...);
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   *** onCreatePreferences(...);
}

-keep class androidx.preference.PreferenceGroup$OnExpandButtonClickListener
-keepclassmembers class androidx.preference.PreferenceGroup$OnExpandButtonClickListener {
}

-keep class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor {
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialExpandedChildrenCount(...);
   *** setInitialExpandedChildrenCount(...);
   *** isAttached(...);
   *** isOnSameScreenAsChildren(...);
   *** getOnExpandButtonClickListener(...);
   *** setOnExpandButtonClickListener(...);
   *** isOrderingAsAdded(...);
   *** setOrderingAsAdded(...);
   *** getPreferenceCount(...);
   *** addItemFromInflater(...);
   *** addPreference(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** findPreference(...);
   *** getPreference(...);
   *** onPrepareAddPreference(...);
   *** removeAll(...);
   *** removePreference(...);
   *** removePreferenceRecursively(...);
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
}

-keep class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener
-keepclassmembers class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnNavigateToScreenListener
-keepclassmembers class androidx.preference.PreferenceManager$OnNavigateToScreenListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener
-keepclassmembers class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   <init>(...);
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager
-keepclassmembers class androidx.preference.PreferenceManager {
   <init>(...);
   *** getContext(...);
   *** isStorageDefault(...);
   *** isStorageDeviceProtected(...);
   *** getOnDisplayPreferenceDialogListener(...);
   *** setOnDisplayPreferenceDialogListener(...);
   *** getOnNavigateToScreenListener(...);
   *** setOnNavigateToScreenListener(...);
   *** getOnPreferenceTreeClickListener(...);
   *** setOnPreferenceTreeClickListener(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceScreen(...);
   *** getSharedPreferences(...);
   *** getSharedPreferencesMode(...);
   *** setSharedPreferencesMode(...);
   *** getSharedPreferencesName(...);
   *** setSharedPreferencesName(...);
   *** createPreferenceScreen(...);
   *** findPreference(...);
   *** getDefaultSharedPreferences(...);
   *** getPreferenceComparisonCallback(...);
   *** inflateFromResource(...);
   *** setDefaultValues(...);
   *** setDefaultValues(...);
   *** setPreferenceComparisonCallback(...);
   *** setPreferences(...);
   *** setStorageDefault(...);
   *** setStorageDeviceProtected(...);
   *** showDialog(...);
}

-keep class androidx.preference.PreferenceScreen
-keepclassmembers class androidx.preference.PreferenceScreen {
   <init>(...);
   *** setShouldUseGeneratedIds(...);
   *** shouldUseGeneratedIds(...);
}

-keep class androidx.preference.PreferenceViewHolder
-keepclassmembers class androidx.preference.PreferenceViewHolder {
   *** isDividerAllowedAbove(...);
   *** setDividerAllowedAbove(...);
   *** isDividerAllowedBelow(...);
   *** setDividerAllowedBelow(...);
   *** createInstanceForTests(...);
   *** findViewById(...);
}

-keep class androidx.preference.TwoStatePreference
-keepclassmembers class androidx.preference.TwoStatePreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getDisableDependentsState(...);
   *** setDisableDependentsState(...);
   *** getSummaryOff(...);
   *** setSummaryOff(...);
   *** getSummaryOn(...);
   *** setSummaryOn(...);
   *** setSummaryOff(...);
   *** setSummaryOn(...);
   *** syncSummaryView(...);
   *** syncSummaryView(...);
}

-keep class androidx.preference.TwoStatePreference
-keepclassmembers class androidx.preference.TwoStatePreference {
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Consumer
-keepclassmembers class androidx.core.util.Consumer {
}

-keep class androidx.core.util.Predicate
-keepclassmembers class androidx.core.util.Predicate {
}

-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.os.LocaleListCompat
-keepclassmembers class androidx.core.os.LocaleListCompat {
   *** getAdjustedDefault(...);
   *** getDefault(...);
   *** getEmptyLocaleList(...);
   *** isEmpty(...);
   *** create(...);
   *** forLanguageTags(...);
   *** get(...);
   *** getFirstMatch(...);
   *** indexOf(...);
   *** matchesLanguageAndScript(...);
   *** size(...);
   *** toLanguageTags(...);
   *** unwrap(...);
   *** wrap(...);
   *** wrap(...);
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.ColorUtils
-keepclassmembers class androidx.core.graphics.ColorUtils {
   *** HSLToColor(...);
   *** LABToColor(...);
   *** LABToXYZ(...);
   *** M3HCTToColor(...);
   *** RGBToHSL(...);
   *** RGBToLAB(...);
   *** RGBToXYZ(...);
   *** XYZToColor(...);
   *** XYZToLAB(...);
   *** blendARGB(...);
   *** blendHSL(...);
   *** blendLAB(...);
   *** calculateContrast(...);
   *** calculateLuminance(...);
   *** calculateMinimumAlpha(...);
   *** colorToHSL(...);
   *** colorToLAB(...);
   *** colorToM3HCT(...);
   *** colorToXYZ(...);
   *** compositeColors(...);
   *** compositeColors(...);
   *** distanceEuclidean(...);
   *** setAlphaComponent(...);
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getAttributionTag(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getContextForLanguage(...);
   *** getDataDir(...);
   *** getDisplayOrDefault(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getString(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** registerReceiver(...);
   *** registerReceiver(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.LocusIdCompat
-keepclassmembers class androidx.core.content.LocusIdCompat {
   <init>(...);
   *** getId(...);
   *** toLocusId(...);
   *** toLocusIdCompat(...);
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** isLaunchedFromBubble(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setLocusContext(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** shouldDumpInternalState(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.ContentInfoCompat
-keepclassmembers class androidx.core.view.ContentInfoCompat {
   *** getClip(...);
   *** getExtras(...);
   *** getFlags(...);
   *** getLinkUri(...);
   *** getSource(...);
   *** partition(...);
   *** partition(...);
   *** toContentInfo(...);
   *** toContentInfoCompat(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.MenuHost
-keepclassmembers class androidx.core.view.MenuHost {
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.OnReceiveContentListener
-keepclassmembers class androidx.core.view.OnReceiveContentListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.WindowInsetsAnimationControlListenerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControlListenerCompat {
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getAutofillId(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getContentCaptureSession(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getImportantForContentCapture(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOnReceiveContentMimeTypes(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getStateDescription(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowInsetsController(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isImportantForContentCapture(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** performHapticFeedback(...);
   *** performHapticFeedback(...);
   *** performReceiveContent(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setAutofillId(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setContentCaptureSession(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setImportantForContentCapture(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOnReceiveContentListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setStateDescription(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setWindowInsetsAnimationCallback(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.ViewStructureCompat
-keepclassmembers class androidx.core.view.ViewStructureCompat {
   *** setClassName(...);
   *** setContentDescription(...);
   *** setDimens(...);
   *** setText(...);
   *** toViewStructure(...);
   *** toViewStructureCompat(...);
}

-keep class androidx.core.view.WindowCompat
-keepclassmembers class androidx.core.view.WindowCompat {
   *** getInsetsController(...);
   *** requireViewById(...);
   *** setDecorFitsSystemWindows(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat {
   <init>(...);
   *** getLowerBound(...);
   *** getUpperBound(...);
   *** inset(...);
   *** toBounds(...);
   *** toBoundsCompat(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   <init>(...);
   *** getDispatchMode(...);
   *** onEnd(...);
   *** onPrepare(...);
   *** onProgress(...);
   *** onStart(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   *** onProgress(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getDurationMillis(...);
   *** getFraction(...);
   *** setFraction(...);
   *** getInterpolatedFraction(...);
   *** getInterpolator(...);
   *** getTypeMask(...);
}

-keep class androidx.core.view.WindowInsetsAnimationControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControllerCompat {
   *** getCurrentAlpha(...);
   *** getCurrentFraction(...);
   *** getCurrentInsets(...);
   *** getHiddenStateInsets(...);
   *** isCancelled(...);
   *** isFinished(...);
   *** isReady(...);
   *** getShownStateInsets(...);
   *** getTypes(...);
   *** finish(...);
   *** setInsetsAndAlpha(...);
}

-keep class androidx.core.view.WindowInsetsCompat$Type
-keepclassmembers class androidx.core.view.WindowInsetsCompat$Type {
   *** captionBar(...);
   *** displayCutout(...);
   *** ime(...);
   *** mandatorySystemGestures(...);
   *** navigationBars(...);
   *** statusBars(...);
   *** systemBars(...);
   *** systemGestures(...);
   *** tappableElement(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener {
}

-keep class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor
-keepclassmembers class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor {
}

-keep class androidx.core.view.WindowInsetsControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat {
   <init>(...);
   *** isAppearanceLightNavigationBars(...);
   *** setAppearanceLightNavigationBars(...);
   *** isAppearanceLightStatusBars(...);
   *** setAppearanceLightStatusBars(...);
   *** getSystemBarsBehavior(...);
   *** setSystemBarsBehavior(...);
   *** addOnControllableInsetsChangedListener(...);
   *** controlWindowInsetsAnimation(...);
   *** hide(...);
   *** removeOnControllableInsetsChangedListener(...);
   *** show(...);
   *** toWindowInsetsControllerCompat(...);
}

-keep class androidx.core.view.contentcapture.ContentCaptureSessionCompat
-keepclassmembers class androidx.core.view.contentcapture.ContentCaptureSessionCompat {
   *** newAutofillId(...);
   *** newVirtualViewStructure(...);
   *** notifyViewTextChanged(...);
   *** notifyViewsAppeared(...);
   *** notifyViewsDisappeared(...);
   *** toContentCaptureSession(...);
   *** toContentCaptureSessionCompat(...);
}

-keep class androidx.core.view.autofill.AutofillIdCompat
-keepclassmembers class androidx.core.view.autofill.AutofillIdCompat {
   *** toAutofillId(...);
   *** toAutofillIdCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** getColumnTitle(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** getRowTitle(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   <init>(...);
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityDataSensitive(...);
   *** setAccessibilityDataSensitive(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** getAvailableExtraData(...);
   *** setAvailableExtraData(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContainerTitle(...);
   *** setContainerTitle(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtraRenderingInfo(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isGranularScrollingSupported(...);
   *** setGranularScrollingSupported(...);
   *** hasRequestInitialAccessibilityFocus(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMinDurationBetweenContentChangesMillis(...);
   *** setMinDurationBetweenContentChangesMillis(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getStateDescription(...);
   *** setStateDescription(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** isTextSelectable(...);
   *** setTextSelectable(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getUniqueId(...);
   *** setUniqueId(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getBoundsInWindow(...);
   *** getChild(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** getParent(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setBoundsInWindow(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setQueryFromAppProcessEnabled(...);
   *** setRequestInitialAccessibilityFocus(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** addExtraDataToAccessibilityNodeInfo(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   <init>(...);
   *** getAnchor(...);
   *** getChildCount(...);
   *** getDisplayId(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** isInPictureInPictureMode(...);
   *** getLayer(...);
   *** getLocales(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getTransitionTimeMillis(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getRegionInScreen(...);
   *** getRoot(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** unwrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

# ACW for Xamarin.AndroidX.Navigation.Runtime
-keep class androidx.navigation.NavController$OnDestinationChangedListener
-keepclassmembers class androidx.navigation.NavController$OnDestinationChangedListener {
}

-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor
-keepclassmembers class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor {
}

-keep class androidx.navigation.NavController
-keepclassmembers class androidx.navigation.NavController {
   <init>(...);
   *** getContext(...);
   *** getCurrentBackStack(...);
   *** getCurrentBackStackEntry(...);
   *** getCurrentBackStackEntryFlow(...);
   *** getCurrentDestination(...);
   *** getGraph(...);
   *** setGraph(...);
   *** getNavInflater(...);
   *** getNavigatorProvider(...);
   *** setNavigatorProvider(...);
   *** getPreviousBackStackEntry(...);
   *** getVisibleEntries(...);
   *** addOnDestinationChangedListener(...);
   *** clearBackStack(...);
   *** clearBackStack(...);
   *** createDeepLink(...);
   *** enableDeepLinkSaveState(...);
   *** enableOnBackPressed(...);
   *** findDestination(...);
   *** findDestination(...);
   *** getBackStackEntry(...);
   *** getBackStackEntry(...);
   *** getViewModelStoreOwner(...);
   *** handleDeepLink(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateUp(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** removeOnDestinationChangedListener(...);
   *** restoreState(...);
   *** saveState(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.NavDeepLinkBuilder
-keepclassmembers class androidx.navigation.NavDeepLinkBuilder {
   <init>(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** createPendingIntent(...);
   *** createTaskStackBuilder(...);
   *** setArguments(...);
   *** setComponentName(...);
   *** setComponentName(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavHostController
-keepclassmembers class androidx.navigation.NavHostController {
   <init>(...);
   *** enableOnBackPressed(...);
   *** setLifecycleOwner(...);
   *** setOnBackPressedDispatcher(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.Navigation
-keepclassmembers class androidx.navigation.Navigation {
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** findNavController(...);
   *** findNavController(...);
   *** setViewNavController(...);
}

-keep class androidx.navigation.NavInflater
-keepclassmembers class androidx.navigation.NavInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.shape.CornerTreatment
-keepclassmembers class com.google.android.material.shape.CornerTreatment {
   <init>(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
}

-keep class com.google.android.material.shape.EdgeTreatment
-keepclassmembers class com.google.android.material.shape.EdgeTreatment {
   <init>(...);
   *** getEdgePath(...);
   *** getEdgePath(...);
}

-keep class com.google.android.material.shape.CornerSize
-keepclassmembers class com.google.android.material.shape.CornerSize {
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$Builder
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAllCornerSizes(...);
   *** setAllCornerSizes(...);
   *** setAllCorners(...);
   *** setAllCorners(...);
   *** setAllEdges(...);
   *** setBottomEdge(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCornerSize(...);
   *** setBottomRightCornerSize(...);
   *** setLeftEdge(...);
   *** setRightEdge(...);
   *** setTopEdge(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCornerSize(...);
   *** setTopLeftCornerSize(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCornerSize(...);
   *** setTopRightCornerSize(...);
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator {
}

-keep class com.google.android.material.shape.ShapeAppearanceModel
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel {
   <init>(...);
   *** getBottomEdge(...);
   *** getBottomLeftCorner(...);
   *** getBottomLeftCornerSize(...);
   *** getBottomRightCorner(...);
   *** getBottomRightCornerSize(...);
   *** getLeftEdge(...);
   *** getRightEdge(...);
   *** getTopEdge(...);
   *** getTopLeftCorner(...);
   *** getTopLeftCornerSize(...);
   *** getTopRightCorner(...);
   *** getTopRightCornerSize(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** isRoundRect(...);
   *** toBuilder(...);
   *** withCornerSize(...);
   *** withCornerSize(...);
   *** withTransformedCornerSizes(...);
}

-keep class com.google.android.material.shape.ShapePath
-keepclassmembers class com.google.android.material.shape.ShapePath {
   <init>(...);
   <init>(...);
   *** addArc(...);
   *** applyToPath(...);
   *** cubicToPoint(...);
   *** lineTo(...);
   *** lineTo(...);
   *** quadToPoint(...);
   *** reset(...);
   *** reset(...);
}

-keep class com.google.android.material.materialswitch.MaterialSwitch
-keepclassmembers class com.google.android.material.materialswitch.MaterialSwitch {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getThumbIconDrawable(...);
   *** setThumbIconDrawable(...);
   *** getThumbIconTintList(...);
   *** setThumbIconTintList(...);
   *** getThumbIconTintMode(...);
   *** setThumbIconTintMode(...);
   *** getTrackDecorationDrawable(...);
   *** setTrackDecorationDrawable(...);
   *** getTrackDecorationTintList(...);
   *** setTrackDecorationTintList(...);
   *** getTrackDecorationTintMode(...);
   *** setTrackDecorationTintMode(...);
   *** setThumbIconResource(...);
   *** setTrackDecorationResource(...);
}

-keep class com.google.android.material.dialog.MaterialAlertDialogBuilder
-keepclassmembers class com.google.android.material.dialog.MaterialAlertDialogBuilder {
   <init>(...);
   <init>(...);
   *** getBackground(...);
   *** setBackground(...);
   *** setBackgroundInsetBottom(...);
   *** setBackgroundInsetEnd(...);
   *** setBackgroundInsetStart(...);
   *** setBackgroundInsetTop(...);
}

-keep class com.google.android.material.color.DynamicColors$OnAppliedCallback
-keepclassmembers class com.google.android.material.color.DynamicColors$OnAppliedCallback {
}

-keep class com.google.android.material.color.DynamicColors$Precondition
-keepclassmembers class com.google.android.material.color.DynamicColors$Precondition {
}

-keep class com.google.android.material.color.DynamicColors
-keepclassmembers class com.google.android.material.color.DynamicColors {
   *** isDynamicColorAvailable(...);
   *** applyIfAvailable(...);
   *** applyIfAvailable(...);
   *** applyIfAvailable(...);
   *** applyToActivitiesIfAvailable(...);
   *** applyToActivitiesIfAvailable(...);
   *** applyToActivitiesIfAvailable(...);
   *** applyToActivitiesIfAvailable(...);
   *** applyToActivitiesIfAvailable(...);
   *** applyToActivityIfAvailable(...);
   *** applyToActivityIfAvailable(...);
   *** wrapContextIfAvailable(...);
   *** wrapContextIfAvailable(...);
}

-keep class com.google.android.material.color.DynamicColorsOptions
-keepclassmembers class com.google.android.material.color.DynamicColorsOptions {
   *** getContentBasedSeedColor(...);
   *** getOnAppliedCallback(...);
   *** getPrecondition(...);
   *** getThemeOverlay(...);
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getButtonIconDrawable(...);
   *** setButtonIconDrawable(...);
   *** getButtonIconTintList(...);
   *** setButtonIconTintList(...);
   *** getButtonIconTintMode(...);
   *** setButtonIconTintMode(...);
   *** isCenterIfNoTextEnabled(...);
   *** setCenterIfNoTextEnabled(...);
   *** getCheckedState(...);
   *** setCheckedState(...);
   *** getErrorAccessibilityLabel(...);
   *** setErrorAccessibilityLabel(...);
   *** isErrorShown(...);
   *** setErrorShown(...);
   *** isUseMaterialThemeColors(...);
   *** setUseMaterialThemeColors(...);
   *** addOnCheckedStateChangedListener(...);
   *** addOnErrorChangedListener(...);
   *** clearOnCheckedStateChangedListeners(...);
   *** clearOnErrorChangedListeners(...);
   *** removeOnCheckedStateChangedListener(...);
   *** removeOnErrorChangedListener(...);
   *** setButtonIconDrawableResource(...);
   *** setErrorAccessibilityLabelResource(...);
}

-keep class com.google.android.material.button.MaterialButton$OnCheckedChangeListener
-keepclassmembers class com.google.android.material.button.MaterialButton$OnCheckedChangeListener {
}

-keep class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor
-keepclassmembers class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor {
}

-keep class com.google.android.material.button.MaterialButton
-keepclassmembers class com.google.android.material.button.MaterialButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getCornerRadius(...);
   *** setCornerRadius(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getIconGravity(...);
   *** setIconGravity(...);
   *** getIconPadding(...);
   *** setIconPadding(...);
   *** getIconSize(...);
   *** setIconSize(...);
   *** getIconTint(...);
   *** setIconTint(...);
   *** getIconTintMode(...);
   *** setIconTintMode(...);
   *** getInsetBottom(...);
   *** setInsetBottom(...);
   *** getInsetTop(...);
   *** setInsetTop(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** isToggleCheckedStateOnClick(...);
   *** setToggleCheckedStateOnClick(...);
   *** addOnCheckedChangeListener(...);
   *** clearOnCheckedChangeListeners(...);
   *** removeOnCheckedChangeListener(...);
   *** setCornerRadiusResource(...);
   *** setIconResource(...);
   *** setIconTintResource(...);
   *** setRippleColorResource(...);
   *** setStrokeColorResource(...);
   *** setStrokeWidthResource(...);
   *** toggle(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** getHideFriction(...);
   *** setHideFriction(...);
   *** isHideable(...);
   *** setHideable(...);
   *** isHideableWhenDragging(...);
   *** isNestedScrollingCheckEnabled(...);
   *** getLastStableState(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** getSignificantVelocityThreshold(...);
   *** setSignificantVelocityThreshold(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** calculateSlideOffset(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setHideableInternal(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
   *** shouldExpandOnUpwardDrag(...);
   *** shouldSkipHalfExpandedStateWhenDragging(...);
   *** shouldSkipSmoothAnimation(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
   *** getEdgeToEdgeEnabled(...);
   *** setLightStatusBar(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialogFragment
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialogFragment {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener
-keepclassmembers class com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener {
}

-keep class mono.com.google.android.material.behavior.SwipeDismissBehavior_OnDismissListenerImplementor
-keepclassmembers class mono.com.google.android.material.behavior.SwipeDismissBehavior_OnDismissListenerImplementor {
}

-keep class com.google.android.material.behavior.SwipeDismissBehavior
-keepclassmembers class com.google.android.material.behavior.SwipeDismissBehavior {
   <init>(...);
   *** getDragState(...);
   *** getListener(...);
   *** setListener(...);
   *** canSwipeDismissView(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onTouchEvent(...);
   *** setDragDismissDistance(...);
   *** setEndAlphaSwipeDistance(...);
   *** setSensitivity(...);
   *** setStartAlphaSwipeDistance(...);
   *** setSwipeDirection(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeNumberLocale(...);
   *** setBadgeNumberLocale(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** getCustomBadgeParent(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getHorizontalOffsetWithText(...);
   *** setHorizontalOffsetWithText(...);
   *** getHorizontalOffsetWithoutText(...);
   *** setHorizontalOffsetWithoutText(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** getVerticalOffsetWithText(...);
   *** setVerticalOffsetWithText(...);
   *** getVerticalOffsetWithoutText(...);
   *** setVerticalOffsetWithoutText(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setBadgeWithTextShapeAppearance(...);
   *** setBadgeWithTextShapeAppearanceOverlay(...);
   *** setBadgeWithoutTextShapeAppearance(...);
   *** setBadgeWithoutTextShapeAppearanceOverlay(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setTextAppearance(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   <init>(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** isItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getMenuView(...);
   *** getPresenter(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** createNavigationBarMenuView(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setItemOnTouchListener(...);
   *** setOnItemReselectedListener(...);
   *** setOnItemSelectedListener(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** setEnabled(...);
   <init>(...);
   *** getActiveIndicatorDrawable(...);
   *** setActiveIndicatorDrawable(...);
   *** getBadge(...);
   *** getItemBackgroundResId(...);
   *** getItemData(...);
   *** getItemDefaultMarginResId(...);
   *** getItemLayoutResId(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setActiveIndicatorEnabled(...);
   *** setActiveIndicatorHeight(...);
   *** setActiveIndicatorMarginHorizontal(...);
   *** setActiveIndicatorResizeable(...);
   *** setActiveIndicatorWidth(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setItemPaddingBottom(...);
   *** setItemPaddingTop(...);
   *** setItemRippleColor(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** getItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** isItemActiveIndicatorResizeable(...);
   *** setItemActiveIndicatorResizeable(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** createNavigationBarItemView(...);
   *** findItemView(...);
   *** getBadge(...);
   *** initialize(...);
   *** isShifting(...);
   *** setItemOnTouchListener(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.navigation.NavigationBarPresenter
-keepclassmembers class com.google.android.material.navigation.NavigationBarPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setCallback(...);
   *** setMenuView(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationView
-keepclassmembers class com.google.android.material.navigation.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBottomInsetScrimEnabled(...);
   *** setBottomInsetScrimEnabled(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getDividerInsetEnd(...);
   *** setDividerInsetEnd(...);
   *** getDividerInsetStart(...);
   *** setDividerInsetStart(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemMaxLines(...);
   *** setItemMaxLines(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getItemVerticalPadding(...);
   *** setItemVerticalPadding(...);
   *** getMenu(...);
   *** getSubheaderInsetEnd(...);
   *** setSubheaderInsetEnd(...);
   *** getSubheaderInsetStart(...);
   *** setSubheaderInsetStart(...);
   *** isTopInsetScrimEnabled(...);
   *** setTopInsetScrimEnabled(...);
   *** addHeaderView(...);
   *** getHeaderView(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemIconSize(...);
   *** setItemTextAppearance(...);
   *** setItemVerticalPaddingResource(...);
   *** setNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getId(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setId(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** getTabIndicatorAnimationMode(...);
   *** setTabIndicatorAnimationMode(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy {
}

-keep class com.google.android.material.tabs.TabLayoutMediator
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAttached(...);
   *** attach(...);
   *** detach(...);
}

-keep class com.google.android.material.snackbar.Snackbar$Callback
-keepclassmembers class com.google.android.material.snackbar.Snackbar$Callback {
   <init>(...);
   *** onDismissed(...);
   *** onShown(...);
}

-keep class com.google.android.material.snackbar.Snackbar
-keepclassmembers class com.google.android.material.snackbar.Snackbar {
   *** hasSnackbarButtonStyleAttr(...);
   *** make(...);
   *** make(...);
   *** make(...);
   *** setAction(...);
   *** setAction(...);
   *** setActionTextColor(...);
   *** setActionTextColor(...);
   *** setBackgroundTint(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setCallback(...);
   *** setMaxInlineActionWidth(...);
   *** setText(...);
   *** setText(...);
   *** setTextColor(...);
   *** setTextColor(...);
   *** setTextMaxLines(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback {
   <init>(...);
   *** onDismissed(...);
   *** onShown(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback {
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar$Behavior {
   <init>(...);
   *** onInterceptTouchEvent(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar {
   <init>(...);
   <init>(...);
   *** getAnchorView(...);
   *** isAnchorViewLayoutListenerEnabled(...);
   *** setAnchorViewLayoutListenerEnabled(...);
   *** getAnimationMode(...);
   *** getContext(...);
   *** getDuration(...);
   *** hasSnackbarStyleAttr(...);
   *** isGestureInsetBottomIgnored(...);
   *** isShown(...);
   *** isShownOrQueued(...);
   *** getNewBehavior(...);
   *** getSnackbarBaseLayoutResId(...);
   *** getView(...);
   *** addCallback(...);
   *** dismiss(...);
   *** dispatchDismiss(...);
   *** getBehavior(...);
   *** removeCallback(...);
   *** setAnchorView(...);
   *** setAnchorView(...);
   *** setAnimationMode(...);
   *** setBehavior(...);
   *** setDuration(...);
   *** setGestureInsetBottomIgnored(...);
   *** show(...);
}

-keep class com.google.android.material.snackbar.BaseTransientBottomBar
-keepclassmembers class com.google.android.material.snackbar.BaseTransientBottomBar {
}

-keep class com.google.android.material.snackbar.ContentViewCallback
-keepclassmembers class com.google.android.material.snackbar.ContentViewCallback {
}

-keep class com.google.android.material.internal.StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.internal.StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.internal.ScrimInsetsFrameLayout
-keepclassmembers class com.google.android.material.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
   *** setDrawBottomInsetForeground(...);
   *** setDrawLeftInsetForeground(...);
   *** setDrawRightInsetForeground(...);
   *** setDrawTopInsetForeground(...);
   *** setScrimInsetForeground(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapsedTitleGravity(...);
   *** setCollapsedTitleGravity(...);
   *** getCollapsedTitleTextSize(...);
   *** setCollapsedTitleTextSize(...);
   *** getCollapsedTitleTypeface(...);
   *** setCollapsedTitleTypeface(...);
   *** getContentScrim(...);
   *** setContentScrim(...);
   *** getExpandedTitleGravity(...);
   *** setExpandedTitleGravity(...);
   *** getExpandedTitleMarginBottom(...);
   *** setExpandedTitleMarginBottom(...);
   *** getExpandedTitleMarginEnd(...);
   *** setExpandedTitleMarginEnd(...);
   *** getExpandedTitleMarginStart(...);
   *** setExpandedTitleMarginStart(...);
   *** getExpandedTitleMarginTop(...);
   *** setExpandedTitleMarginTop(...);
   *** getExpandedTitleTextSize(...);
   *** setExpandedTitleTextSize(...);
   *** getExpandedTitleTypeface(...);
   *** setExpandedTitleTypeface(...);
   *** isExtraMultilineHeightEnabled(...);
   *** setExtraMultilineHeightEnabled(...);
   *** isForceApplySystemWindowInsetTop(...);
   *** setForceApplySystemWindowInsetTop(...);
   *** getHyphenationFrequency(...);
   *** setHyphenationFrequency(...);
   *** getLineCount(...);
   *** getLineSpacingAdd(...);
   *** setLineSpacingAdd(...);
   *** getLineSpacingMultiplier(...);
   *** setLineSpacingMultiplier(...);
   *** getMaxLines(...);
   *** setMaxLines(...);
   *** isRtlTextDirectionHeuristicsEnabled(...);
   *** setRtlTextDirectionHeuristicsEnabled(...);
   *** getScrimAnimationDuration(...);
   *** setScrimAnimationDuration(...);
   *** getScrimVisibleHeightTrigger(...);
   *** setScrimVisibleHeightTrigger(...);
   *** getStatusBarScrim(...);
   *** setStatusBarScrim(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleCollapseMode(...);
   *** setTitleCollapseMode(...);
   *** isTitleEnabled(...);
   *** setTitleEnabled(...);
   *** getTitlePositionInterpolator(...);
   *** setTitlePositionInterpolator(...);
   *** getTitleTextEllipsize(...);
   *** setCollapsedTitleTextAppearance(...);
   *** setCollapsedTitleTextColor(...);
   *** setCollapsedTitleTextColor(...);
   *** setContentScrimColor(...);
   *** setContentScrimResource(...);
   *** setExpandedTitleColor(...);
   *** setExpandedTitleMargin(...);
   *** setExpandedTitleTextAppearance(...);
   *** setExpandedTitleTextColor(...);
   *** setScrimsShown(...);
   *** setScrimsShown(...);
   *** setStaticLayoutBuilderConfigurer(...);
   *** setStatusBarScrimColor(...);
   *** setStatusBarScrimResource(...);
   *** setTitleEllipsize(...);
}

-keep class com.google.android.material.appbar.MaterialToolbar
-keepclassmembers class com.google.android.material.appbar.MaterialToolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLogoAdjustViewBounds(...);
   *** setLogoAdjustViewBounds(...);
   *** getLogoScaleType(...);
   *** setLogoScaleType(...);
   *** getNavigationIconTint(...);
   *** isSubtitleCentered(...);
   *** setSubtitleCentered(...);
   *** isTitleCentered(...);
   *** setTitleCentered(...);
   *** clearNavigationIconTint(...);
   *** setNavigationIconTint(...);
}

# ACW for Xamarin.AndroidX.Navigation.UI
-keep class androidx.navigation.ui.AppBarConfiguration$Builder
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setDrawerLayout(...);
   *** setFallbackOnNavigateUpListener(...);
   *** setOpenableLayout(...);
}

-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener {
}

-keep class androidx.navigation.ui.AppBarConfiguration
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration {
   <init>(...);
   *** getDrawerLayout(...);
   *** getFallbackOnNavigateUpListener(...);
   *** getOpenableLayout(...);
   *** getTopLevelDestinations(...);
   *** isTopLevelDestination(...);
}

-keep class androidx.navigation.ui.NavigationUI
-keepclassmembers class androidx.navigation.ui.NavigationUI {
   *** findBottomSheetBehavior(...);
   *** navigateUp(...);
   *** navigateUp(...);
   *** onNavDestinationSelected(...);
   *** onNavDestinationSelected(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Navigation.Fragment
-keep class androidx.navigation.fragment.NavHostFragment
-keepclassmembers class androidx.navigation.fragment.NavHostFragment {
   <init>(...);
   *** getNavController(...);
   *** create(...);
   *** create(...);
   *** createFragmentNavigator(...);
   *** findNavController(...);
   *** onCreateNavController(...);
   *** onCreateNavHostController(...);
}

# ACW for Xamarin.AndroidX.Navigation.Common
-keep class androidx.navigation.NavDirections
-keepclassmembers class androidx.navigation.NavDirections {
}

-keep class androidx.navigation.NavViewModelStoreProvider
-keepclassmembers class androidx.navigation.NavViewModelStoreProvider {
}

-keep class androidx.navigation.NavAction
-keepclassmembers class androidx.navigation.NavAction {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultArguments(...);
   *** setDefaultArguments(...);
   *** getDestinationId(...);
   *** getNavOptions(...);
   *** setNavOptions(...);
}

-keep class androidx.navigation.NavArgument
-keepclassmembers class androidx.navigation.NavArgument {
   *** getDefaultValue(...);
   *** isDefaultValuePresent(...);
   *** isNullable(...);
   *** getType(...);
   *** putDefaultValue(...);
   *** verify(...);
}

-keep class androidx.navigation.NavBackStackEntry
-keepclassmembers class androidx.navigation.NavBackStackEntry {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getDestination(...);
   *** setDestination(...);
   *** getId(...);
   *** getLifecycle(...);
   *** getMaxLifecycle(...);
   *** setMaxLifecycle(...);
   *** getSavedStateHandle(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** handleLifecycleEvent(...);
   *** saveState(...);
   *** updateState(...);
}

-keep class androidx.navigation.NavDeepLink
-keepclassmembers class androidx.navigation.NavDeepLink {
   <init>(...);
   *** getAction(...);
   *** isExactDeepLink(...);
   *** getMimeType(...);
   *** getUriPattern(...);
   *** getMatchingArguments(...);
   *** getMimeTypeMatchRating(...);
}

-keep class androidx.navigation.NavDeepLinkRequest
-keepclassmembers class androidx.navigation.NavDeepLinkRequest {
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getMimeType(...);
   *** getUri(...);
}

-keep class androidx.navigation.NavDestination$DeepLinkMatch
-keepclassmembers class androidx.navigation.NavDestination$DeepLinkMatch {
   <init>(...);
   *** getDestination(...);
   *** getMatchingArgs(...);
   *** compareTo(...);
   *** hasMatchingArgs(...);
   *** compareTo(...);
}

-keep class androidx.navigation.NavDestination
-keepclassmembers class androidx.navigation.NavDestination {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDisplayName(...);
   *** getId(...);
   *** setId(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getNavigatorName(...);
   *** getParent(...);
   *** setParent(...);
   *** getRoute(...);
   *** setRoute(...);
   *** addArgument(...);
   *** addDeepLink(...);
   *** addDeepLink(...);
   *** addInDefaultArgs(...);
   *** buildDeepLinkIds(...);
   *** buildDeepLinkIds(...);
   *** fillInLabel(...);
   *** getAction(...);
   *** getDisplayName(...);
   *** getHierarchy(...);
   *** hasDeepLink(...);
   *** hasDeepLink(...);
   *** hasRoute(...);
   *** matchDeepLink(...);
   *** matchDeepLink(...);
   *** onInflate(...);
   *** parseClassFromName(...);
   *** parseClassFromNameInternal(...);
   *** putAction(...);
   *** putAction(...);
   *** removeAction(...);
   *** removeArgument(...);
   *** supportsActions(...);
}

-keep class androidx.navigation.NavGraph
-keepclassmembers class androidx.navigation.NavGraph {
   <init>(...);
   *** getNodes(...);
   *** getStartDestDisplayName(...);
   *** getStartDestination(...);
   *** setStartDestination(...);
   *** getStartDestinationId(...);
   *** getStartDestinationRoute(...);
   *** addAll(...);
   *** addDestination(...);
   *** addDestinations(...);
   *** addDestinations(...);
   *** clear(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findStartDestination(...);
   *** iterator(...);
   *** matchDeepLinkExcludingChildren(...);
   *** remove(...);
   *** setStartDestination(...);
}

-keep class androidx.navigation.Navigator$Extras
-keepclassmembers class androidx.navigation.Navigator$Extras {
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   <init>(...);
   *** isAttached(...);
   *** getState(...);
   *** createDestination(...);
   *** navigate(...);
   *** navigate(...);
   *** onAttach(...);
   *** onLaunchSingleTop(...);
   *** onRestoreState(...);
   *** onSaveState(...);
   *** popBackStack(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   *** createDestination(...);
}

-keep class androidx.navigation.NavigatorProvider
-keepclassmembers class androidx.navigation.NavigatorProvider {
   <init>(...);
   *** getNavigators(...);
   *** addNavigator(...);
   *** addNavigator(...);
   *** getNavigator(...);
   *** getNavigator(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   <init>(...);
   *** getBackStack(...);
   *** isNavigating(...);
   *** setNavigating(...);
   *** getTransitionsInProgress(...);
   *** createBackStackEntry(...);
   *** markTransitionComplete(...);
   *** onLaunchSingleTop(...);
   *** onLaunchSingleTopWithTransition(...);
   *** pop(...);
   *** popWithTransition(...);
   *** prepareForTransition(...);
   *** push(...);
   *** pushWithTransition(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   *** createBackStackEntry(...);
}

-keep class androidx.navigation.NavOptions$Builder
-keepclassmembers class androidx.navigation.NavOptions$Builder {
   <init>(...);
   *** build(...);
   *** setEnterAnim(...);
   *** setExitAnim(...);
   *** setLaunchSingleTop(...);
   *** setPopEnterAnim(...);
   *** setPopExitAnim(...);
   *** setPopUpTo(...);
   *** setPopUpTo(...);
   *** setPopUpTo(...);
   *** setPopUpTo(...);
   *** setRestoreState(...);
}

-keep class androidx.navigation.NavOptions
-keepclassmembers class androidx.navigation.NavOptions {
   *** getEnterAnim(...);
   *** getExitAnim(...);
   *** isPopUpToInclusive(...);
   *** getPopEnterAnim(...);
   *** getPopExitAnim(...);
   *** getPopUpTo(...);
   *** getPopUpToId(...);
   *** getPopUpToRoute(...);
   *** shouldLaunchSingleTop(...);
   *** shouldPopUpToSaveState(...);
   *** shouldRestoreState(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   <init>(...);
   *** isNullableAllowed(...);
   *** getName(...);
   *** fromArgType(...);
   *** get(...);
   *** inferFromValue(...);
   *** inferFromValueType(...);
   *** parseAndPut(...);
   *** parseAndPut(...);
   *** parseValue(...);
   *** parseValue(...);
   *** serializeAsValue(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** get(...);
   *** parseValue(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.DialogFragment
-keepclassmembers class androidx.fragment.app.DialogFragment {
   <init>(...);
   <init>(...);
   *** isCancelable(...);
   *** setCancelable(...);
   *** getDialog(...);
   *** getShowsDialog(...);
   *** setShowsDialog(...);
   *** getTheme(...);
   *** dismiss(...);
   *** dismissAllowingStateLoss(...);
   *** dismissNow(...);
   *** onCancel(...);
   *** onCreateDialog(...);
   *** onDismiss(...);
   *** requireComponentDialog(...);
   *** requireDialog(...);
   *** setStyle(...);
   *** setupDialog(...);
   *** show(...);
   *** show(...);
   *** showNow(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
   *** onWrongNestedHierarchy(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** findRelativeAdapterPositionIn(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getStateRestorationPolicy(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** setStateRestorationPolicy(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
   *** onStateRestorationPolicyChanged(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getBindingAdapterPosition(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getAdapterPosition(...);
   *** getBindingAdapter(...);
   *** getBindingAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** addRecyclerListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** nestedScrollBy(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** removeRecyclerListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setDebugAssertionsEnabled(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setVerboseLoggingEnabled(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** restoreState(...);
   *** saveState(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

# ACW for Xamarin.AndroidX.ConstraintLayout
-keep class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.widget.ConstraintAttribute
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getColorValue(...);
   *** setColorValue(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
   *** getIntegerValue(...);
   *** isBooleanValue(...);
   *** isContinuous(...);
   *** isMethod(...);
   *** getName(...);
   *** getStringValue(...);
   *** setStringValue(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyCustom(...);
   *** diff(...);
   *** extractAttributes(...);
   *** getValuesToInterpolate(...);
   *** numberOfInterpolatedValues(...);
   *** parse(...);
   *** setAttributes(...);
   *** setIntValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addView(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeaturesInConstraintSet(...);
   *** containsId(...);
   *** getReferencedIds(...);
   *** getViews(...);
   *** indexFromId(...);
   *** init(...);
   *** loadParameters(...);
   *** onDraw(...);
   *** removeView(...);
   *** resolveRtl(...);
   *** setIds(...);
   *** setReferenceTags(...);
   *** setReferencedIds(...);
   *** updatePostConstraints(...);
   *** updatePostLayout(...);
   *** updatePostMeasure(...);
   *** updatePreDraw(...);
   *** updatePreLayout(...);
   *** updatePreLayout(...);
   *** validateParams(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
}

-keep class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintTag(...);
   *** getConstraintWidget(...);
   *** reset(...);
   *** setWidgetDebugName(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isRtl(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** getSceneString(...);
   *** getSharedValues(...);
   *** applyConstraintsFromLayoutParams(...);
   *** fillMetrics(...);
   *** getDesignInformation(...);
   *** getViewById(...);
   *** getViewWidget(...);
   *** loadLayoutDescription(...);
   *** onLayout(...);
   *** parseLayoutDescription(...);
   *** resolveMeasuredDimension(...);
   *** resolveSystem(...);
   *** setConstraintSet(...);
   *** setDesignInformation(...);
   *** setOnConstraintsChanged(...);
   *** setSelfDimensionBehaviour(...);
   *** setState(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayoutStates
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayoutStates {
   *** needsToChange(...);
   *** setOnConstraintsChanged(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.widget.Constraints
-keepclassmembers class androidx.constraintlayout.widget.Constraints {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintSet(...);
   *** onLayout(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
   <init>(...);
   *** postLayoutChange(...);
   *** preLayoutChange(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Constraint
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Constraint {
   <init>(...);
   *** applyDelta(...);
   *** applyTo(...);
   *** clone(...);
   *** printDelta(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Layout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Layout {
   <init>(...);
   *** copyFrom(...);
   *** dump(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Motion
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Motion {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$PropertySet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$PropertySet {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Transform
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Transform {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet {
   <init>(...);
   *** getCustomAttributeSet(...);
   *** isForceId(...);
   *** setForceId(...);
   *** addColorAttributes(...);
   *** addFloatAttributes(...);
   *** addIntAttributes(...);
   *** addStringAttributes(...);
   *** addToHorizontalChain(...);
   *** addToHorizontalChainRTL(...);
   *** addToVerticalChain(...);
   *** applyCustomAttributes(...);
   *** applyDeltaFrom(...);
   *** applyTo(...);
   *** applyToHelper(...);
   *** applyToLayoutParams(...);
   *** applyToWithoutCustom(...);
   *** buildDelta(...);
   *** center(...);
   *** centerHorizontally(...);
   *** centerHorizontally(...);
   *** centerHorizontallyRtl(...);
   *** centerHorizontallyRtl(...);
   *** centerVertically(...);
   *** centerVertically(...);
   *** clear(...);
   *** clear(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** connect(...);
   *** connect(...);
   *** constrainCircle(...);
   *** constrainDefaultHeight(...);
   *** constrainDefaultWidth(...);
   *** constrainHeight(...);
   *** constrainMaxHeight(...);
   *** constrainMaxWidth(...);
   *** constrainMinHeight(...);
   *** constrainMinWidth(...);
   *** constrainPercentHeight(...);
   *** constrainPercentWidth(...);
   *** constrainWidth(...);
   *** constrainedHeight(...);
   *** constrainedWidth(...);
   *** create(...);
   *** createBarrier(...);
   *** createHorizontalChain(...);
   *** createHorizontalChainRtl(...);
   *** createVerticalChain(...);
   *** dump(...);
   *** getApplyElevation(...);
   *** getConstraint(...);
   *** getHeight(...);
   *** getKnownIds(...);
   *** getParameters(...);
   *** getReferencedIds(...);
   *** getVisibility(...);
   *** getVisibilityMode(...);
   *** getWidth(...);
   *** load(...);
   *** load(...);
   *** parseColorAttributes(...);
   *** parseFloatAttributes(...);
   *** parseIntAttributes(...);
   *** parseStringAttributes(...);
   *** readFallback(...);
   *** readFallback(...);
   *** removeAttribute(...);
   *** removeFromHorizontalChain(...);
   *** removeFromVerticalChain(...);
   *** setAlpha(...);
   *** setApplyElevation(...);
   *** setBarrierType(...);
   *** setColorValue(...);
   *** setDimensionRatio(...);
   *** setEditorAbsoluteX(...);
   *** setEditorAbsoluteY(...);
   *** setElevation(...);
   *** setFloatValue(...);
   *** setGoneMargin(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
   *** setHorizontalBias(...);
   *** setHorizontalChainStyle(...);
   *** setHorizontalWeight(...);
   *** setIntValue(...);
   *** setLayoutWrapBehavior(...);
   *** setMargin(...);
   *** setReferencedIds(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setStringValue(...);
   *** setTransformPivot(...);
   *** setTransformPivotX(...);
   *** setTransformPivotY(...);
   *** setTranslation(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setValidateOnParse(...);
   *** setVerticalBias(...);
   *** setVerticalChainStyle(...);
   *** setVerticalWeight(...);
   *** setVisibility(...);
   *** setVisibilityMode(...);
   *** writeState(...);
}

-keep class androidx.constraintlayout.widget.SharedValues$SharedValuesListener
-keepclassmembers class androidx.constraintlayout.widget.SharedValues$SharedValuesListener {
}

-keep class androidx.constraintlayout.widget.SharedValues
-keepclassmembers class androidx.constraintlayout.widget.SharedValues {
   <init>(...);
   *** addListener(...);
   *** clearListeners(...);
   *** fireNewValue(...);
   *** getValue(...);
   *** removeListener(...);
   *** removeListener(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   <init>(...);
   *** makeCustomSpline(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener {
}

-keep class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor
-keepclassmembers class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCurrentState(...);
   *** getDefinedTransitions(...);
   *** isDelayedApplicationOfInitialState(...);
   *** setDelayedApplicationOfInitialState(...);
   *** getDesignTool(...);
   *** getEndState(...);
   *** isInteractionEnabled(...);
   *** setInteractionEnabled(...);
   *** isInRotation(...);
   *** getNanoTime(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getScene(...);
   *** setScene(...);
   *** getStartState(...);
   *** getTargetPosition(...);
   *** getTransitionState(...);
   *** setTransitionState(...);
   *** getTransitionTimeMs(...);
   *** getVelocity(...);
   *** applyViewTransition(...);
   *** cloneConstraintSet(...);
   *** enableTransition(...);
   *** enableViewTransition(...);
   *** fireTransitionCompleted(...);
   *** fireTrigger(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getDebugMode(...);
   *** getTransition(...);
   *** getViewVelocity(...);
   *** isViewTransitionEnabled(...);
   *** jumpToState(...);
   *** obtainVelocityTracker(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** rebuildMotion(...);
   *** rebuildScene(...);
   *** removeTransitionListener(...);
   *** rotateTo(...);
   *** scheduleTransitionTo(...);
   *** setDebugMode(...);
   *** setInterpolatedProgress(...);
   *** setOnHide(...);
   *** setOnShow(...);
   *** setProgress(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransitionDuration(...);
   *** setTransitionListener(...);
   *** touchAnimateTo(...);
   *** touchSpringTo(...);
   *** transitionToEnd(...);
   *** transitionToEnd(...);
   *** transitionToStart(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** updateState(...);
   *** updateState(...);
   *** updateStateAnimate(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.DesignTool
-keepclassmembers class androidx.constraintlayout.motion.widget.DesignTool {
   <init>(...);
   *** getEndState(...);
   *** isInTransition(...);
   *** getProgress(...);
   *** getStartState(...);
   *** getState(...);
   *** setState(...);
   *** getTransitionTimeMs(...);
   *** designAccess(...);
   *** disableAutoTransition(...);
   *** dumpConstraintSet(...);
   *** getAnimationKeyFrames(...);
   *** getAnimationPath(...);
   *** getAnimationRectangles(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePosition(...);
   *** getKeyFramePositions(...);
   *** getKeyframe(...);
   *** getKeyframe(...);
   *** getKeyframeAtLocation(...);
   *** getPositionKeyframe(...);
   *** setAttributes(...);
   *** setKeyFrame(...);
   *** setKeyFramePosition(...);
   *** setKeyframe(...);
   *** setToolPosition(...);
   *** setTransition(...);
   *** setViewDebug(...);
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setViewId(...);
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   *** addValues(...);
   *** clone(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyFrames
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyFrames {
   <init>(...);
   <init>(...);
   *** getKeys(...);
   *** addAllFrames(...);
   *** addFrames(...);
   *** addKey(...);
   *** getKeyFramesForView(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionController
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionController {
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** getCenter(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** remeasure(...);
   *** setPathMotionArc(...);
   *** setStartState(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick {
   <init>(...);
   <init>(...);
   *** addOnClickListeners(...);
   *** onClick(...);
   *** removeOnClickListeners(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition {
   <init>(...);
   *** getAutoTransition(...);
   *** setAutoTransition(...);
   *** getDuration(...);
   *** setDuration(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getEndConstraintSetId(...);
   *** getId(...);
   *** getKeyFrameList(...);
   *** getLayoutDuringTransition(...);
   *** setLayoutDuringTransition(...);
   *** getOnClickList(...);
   *** getPathMotionArc(...);
   *** setPathMotionArc(...);
   *** getStagger(...);
   *** setStagger(...);
   *** getStartConstraintSetId(...);
   *** getTouchResponse(...);
   *** addKeyFrame(...);
   *** addOnClick(...);
   *** addOnClick(...);
   *** debugString(...);
   *** isTransitionFlag(...);
   *** removeOnClick(...);
   *** setEnable(...);
   *** setInterpolatorInfo(...);
   *** setOnSwipe(...);
   *** setOnTouchUp(...);
   *** setTransitionFlag(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene {
   <init>(...);
   *** getDefinedTransitions(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getInterpolator(...);
   *** getStaggered(...);
   *** addOnClickListeners(...);
   *** addTransition(...);
   *** applyViewTransition(...);
   *** bestTransitionFor(...);
   *** disableAutoTransition(...);
   *** enableViewTransition(...);
   *** gatPathMotionArc(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getKeyFrames(...);
   *** getPathPercent(...);
   *** getTransitionById(...);
   *** getTransitionsWithState(...);
   *** isViewTransitionEnabled(...);
   *** lookUpConstraintId(...);
   *** lookUpConstraintName(...);
   *** onLayout(...);
   *** removeTransition(...);
   *** setConstraintSet(...);
   *** setKeyframe(...);
   *** setRtl(...);
   *** setTransition(...);
   *** stripID(...);
   *** validateLayout(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.OnSwipe
-keepclassmembers class androidx.constraintlayout.motion.widget.OnSwipe {
   <init>(...);
   *** getAutoCompleteMode(...);
   *** setAutoCompleteMode(...);
   *** getDragDirection(...);
   *** getDragScale(...);
   *** getDragThreshold(...);
   *** getLimitBoundsTo(...);
   *** getMaxAcceleration(...);
   *** getMaxVelocity(...);
   *** getMoveWhenScrollAtTop(...);
   *** getNestedScrollFlags(...);
   *** getOnTouchUp(...);
   *** getRotationCenterId(...);
   *** getSpringBoundary(...);
   *** getSpringDamping(...);
   *** getSpringMass(...);
   *** getSpringStiffness(...);
   *** getSpringStopThreshold(...);
   *** getTouchAnchorId(...);
   *** getTouchAnchorSide(...);
   *** getTouchRegionId(...);
   *** setDragDirection(...);
   *** setDragScale(...);
   *** setDragThreshold(...);
   *** setLimitBoundsTo(...);
   *** setMaxAcceleration(...);
   *** setMaxVelocity(...);
   *** setMoveWhenScrollAtTop(...);
   *** setNestedScrollFlags(...);
   *** setOnTouchUp(...);
   *** setRotateCenter(...);
   *** setSpringBoundary(...);
   *** setSpringDamping(...);
   *** setSpringMass(...);
   *** setSpringStiffness(...);
   *** setSpringStopThreshold(...);
   *** setTouchAnchorId(...);
   *** setTouchAnchorSide(...);
   *** setTouchRegionId(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$Event
-keepclassmembers class androidx.lifecycle.Lifecycle$Event {
   *** getTargetState(...);
   *** downFrom(...);
   *** downTo(...);
   *** upFrom(...);
   *** upTo(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** getInternalScopeRef(...);
   *** setInternalScopeRef(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Core.SplashScreen
-keep class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition
-keepclassmembers class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition {
}

-keep class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener
-keepclassmembers class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener {
}

-keep class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor
-keepclassmembers class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor {
}

-keep class androidx.core.splashscreen.SplashScreen
-keepclassmembers class androidx.core.splashscreen.SplashScreen {
   <init>(...);
   *** installSplashScreen(...);
   *** setKeepOnScreenCondition(...);
   *** setOnExitAnimationListener(...);
}

-keep class androidx.core.splashscreen.SplashScreenViewProvider
-keepclassmembers class androidx.core.splashscreen.SplashScreenViewProvider {
   *** getIconAnimationDurationMillis(...);
   *** getIconAnimationStartMillis(...);
   *** getIconView(...);
   *** getView(...);
   *** remove(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModel
-keepclassmembers class androidx.lifecycle.ViewModel {
   <init>(...);
   <init>(...);
   *** addCloseable(...);
   *** onCleared(...);
}

-keep class androidx.lifecycle.ViewModel
-keepclassmembers class androidx.lifecycle.ViewModel {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory$Companion
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory$Companion {
   *** from(...);
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
   *** get(...);
   *** keys(...);
   *** put(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras$Key
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras$Key {
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.ViewModelInitializer
-keepclassmembers class androidx.lifecycle.viewmodel.ViewModelInitializer {
   <init>(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** getSavedStateProvider(...);
   *** performSave(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class androidx.cursoradapter.widget.CursorFilter
-keepclassmembers class androidx.cursoradapter.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getLockMode(...);
   *** setLockMode(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.DynamicAnimation
-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
   *** isRunning(...);
   *** getMinimumVisibleChange(...);
   *** addEndListener(...);
   *** addUpdateListener(...);
   *** cancel(...);
   *** doAnimationFrame(...);
   *** removeEndListener(...);
   *** removeUpdateListener(...);
   *** setMaxValue(...);
   *** setMinValue(...);
   *** setMinimumVisibleChange(...);
   *** setStartValue(...);
   *** setStartVelocity(...);
   *** start(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
}

-keep class androidx.dynamicanimation.animation.FlingAnimation
-keepclassmembers class androidx.dynamicanimation.animation.FlingAnimation {
   <init>(...);
   <init>(...);
   *** getFriction(...);
   *** setFriction(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   <init>(...);
   *** createFloatPropertyCompat(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatValueHolder
-keepclassmembers class androidx.dynamicanimation.animation.FloatValueHolder {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.SpringAnimation
-keepclassmembers class androidx.dynamicanimation.animation.SpringAnimation {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpring(...);
   *** animateToFinalPosition(...);
   *** canSkipToEnd(...);
   *** setSpring(...);
   *** skipToEnd(...);
}

-keep class androidx.dynamicanimation.animation.SpringForce
-keepclassmembers class androidx.dynamicanimation.animation.SpringForce {
   <init>(...);
   <init>(...);
   *** getDampingRatio(...);
   *** getFinalPosition(...);
   *** getStiffness(...);
   *** getAcceleration(...);
   *** isAtEquilibrium(...);
   *** setDampingRatio(...);
   *** setFinalPosition(...);
   *** setStiffness(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

-keep class androidx.cardview.widget.RoundRectDrawableWithShadow
-keepclassmembers class androidx.cardview.widget.RoundRectDrawableWithShadow {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** createHandle(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** getStateFlow(...);
   *** keys(...);
   *** remove(...);
   *** savedStateProvider(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** isInitialized(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

-keep class androidx.lifecycle.MutableLiveData
-keepclassmembers class androidx.lifecycle.MutableLiveData {
   <init>(...);
   <init>(...);
   *** postValue(...);
   *** setValue(...);
}

# ACW for Xamarin.AndroidX.ConstraintLayout.Core
-keep class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables
-keepclassmembers class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables {
}

-keep class androidx.constraintlayout.core.ArrayRow
-keepclassmembers class androidx.constraintlayout.core.ArrayRow {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** getKey(...);
   *** addError(...);
   *** addError(...);
   *** clear(...);
   *** createRowDimensionRatio(...);
   *** createRowEqualDimension(...);
   *** createRowEqualMatchDimensions(...);
   *** createRowEquals(...);
   *** createRowEquals(...);
   *** createRowGreaterThan(...);
   *** createRowGreaterThan(...);
   *** createRowLowerThan(...);
   *** createRowWithAngle(...);
   *** getPivotCandidate(...);
   *** pickPivot(...);
   *** reset(...);
   *** updateFromFinalVariable(...);
   *** updateFromRow(...);
   *** updateFromSynonymVariable(...);
   *** updateFromSystem(...);
}

-keep class androidx.constraintlayout.core.Cache
-keepclassmembers class androidx.constraintlayout.core.Cache {
   <init>(...);
}

-keep class androidx.constraintlayout.core.LinearSystem
-keepclassmembers class androidx.constraintlayout.core.LinearSystem {
   <init>(...);
   *** getCache(...);
   *** getMemoryUsed(...);
   *** getMetrics(...);
   *** getNumEquations(...);
   *** getNumVariables(...);
   *** addCenterPoint(...);
   *** addCentering(...);
   *** addConstraint(...);
   *** addEquality(...);
   *** addEquality(...);
   *** addGreaterBarrier(...);
   *** addGreaterThan(...);
   *** addLowerBarrier(...);
   *** addLowerThan(...);
   *** addRatio(...);
   *** addSynonym(...);
   *** createErrorVariable(...);
   *** createExtraVariable(...);
   *** createObjectVariable(...);
   *** createRow(...);
   *** createRowDimensionPercent(...);
   *** createSlackVariable(...);
   *** displayReadableRows(...);
   *** displayVariablesReadableRows(...);
   *** fillMetrics(...);
   *** getObjectVariableValue(...);
   *** minimize(...);
   *** removeRow(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.Metrics
-keepclassmembers class androidx.constraintlayout.core.Metrics {
   <init>(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.SolverVariable$Type
-keepclassmembers class androidx.constraintlayout.core.SolverVariable$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.SolverVariable
-keepclassmembers class androidx.constraintlayout.core.SolverVariable {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** setName(...);
   *** addToRow(...);
   *** compareTo(...);
   *** removeFromRow(...);
   *** reset(...);
   *** setFinalValue(...);
   *** setSynonym(...);
   *** setType(...);
   *** updateReferencesWithNewDefinition(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor {
   <init>(...);
   *** getDependents(...);
   *** getFinalValue(...);
   *** setFinalValue(...);
   *** hasCenteredDependents(...);
   *** hasDependents(...);
   *** hasFinalValue(...);
   *** isConnected(...);
   *** isSideAnchor(...);
   *** isVerticalAnchor(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getOpposite(...);
   *** getOwner(...);
   *** getSolverVariable(...);
   *** getTarget(...);
   *** connect(...);
   *** connect(...);
   *** copyFrom(...);
   *** findDependents(...);
   *** getType(...);
   *** isConnectionAllowed(...);
   *** isConnectionAllowed(...);
   *** isSimilarDimensionConnection(...);
   *** isValidConnection(...);
   *** reset(...);
   *** resetFinalResolution(...);
   *** resetSolverVariable(...);
   *** setGoneMargin(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchors(...);
   *** isAnimated(...);
   *** setAnimated(...);
   *** getBaselineDistance(...);
   *** setBaselineDistance(...);
   *** getBottom(...);
   *** getCompanionWidget(...);
   *** setCompanionWidget(...);
   *** getContainerItemSkip(...);
   *** setContainerItemSkip(...);
   *** getDebugName(...);
   *** setDebugName(...);
   *** getDimensionRatio(...);
   *** getDimensionRatioSide(...);
   *** hasBaseline(...);
   *** setHasBaseline(...);
   *** hasDependencies(...);
   *** hasDimensionOverride(...);
   *** getHeight(...);
   *** setHeight(...);
   *** isHeightWrapContent(...);
   *** setHeightWrapContent(...);
   *** getHorizontalBiasPercent(...);
   *** setHorizontalBiasPercent(...);
   *** getHorizontalChainControlWidget(...);
   *** getHorizontalChainStyle(...);
   *** setHorizontalChainStyle(...);
   *** getHorizontalDimensionBehaviour(...);
   *** setHorizontalDimensionBehaviour(...);
   *** getHorizontalMargin(...);
   *** isInPlaceholder(...);
   *** setInPlaceholder(...);
   *** isInVirtualLayout(...);
   *** setInVirtualLayout(...);
   *** isHorizontalSolvingPassDone(...);
   *** isInHorizontalChain(...);
   *** isInVerticalChain(...);
   *** isResolvedHorizontally(...);
   *** isResolvedVertically(...);
   *** isRoot(...);
   *** isSpreadHeight(...);
   *** isSpreadWidth(...);
   *** isVerticalSolvingPassDone(...);
   *** getLastHorizontalMeasureSpec(...);
   *** getLastVerticalMeasureSpec(...);
   *** getLeft(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** isMeasureRequested(...);
   *** setMeasureRequested(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizerWrapHeight(...);
   *** getOptimizerWrapWidth(...);
   *** getParent(...);
   *** setParent(...);
   *** getRight(...);
   *** getRootX(...);
   *** getRootY(...);
   *** getTop(...);
   *** getType(...);
   *** setType(...);
   *** getVerticalBiasPercent(...);
   *** setVerticalBiasPercent(...);
   *** getVerticalChainControlWidget(...);
   *** getVerticalChainStyle(...);
   *** setVerticalChainStyle(...);
   *** getVerticalDimensionBehaviour(...);
   *** setVerticalDimensionBehaviour(...);
   *** getVerticalMargin(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidth(...);
   *** setWidth(...);
   *** isWidthWrapContent(...);
   *** setWidthWrapContent(...);
   *** getWrapBehaviorInParent(...);
   *** setWrapBehaviorInParent(...);
   *** addChildrenToSolverByDependency(...);
   *** addToSolver(...);
   *** allowedInBarrier(...);
   *** connect(...);
   *** connect(...);
   *** connect(...);
   *** connectCircularConstraint(...);
   *** copy(...);
   *** createObjectVariables(...);
   *** ensureMeasureRequested(...);
   *** ensureWidgetRuns(...);
   *** getAnchor(...);
   *** getBiasPercent(...);
   *** getDimensionBehaviour(...);
   *** getLength(...);
   *** getNextChainMember(...);
   *** getPreviousChainMember(...);
   *** getRun(...);
   *** getSceneString(...);
   *** getX(...);
   *** getY(...);
   *** getHasBaseline(...);
   *** hasDanglingDimension(...);
   *** hasResolvedTargets(...);
   *** immediateConnect(...);
   *** isInBarrier(...);
   *** markHorizontalSolvingPassDone(...);
   *** markVerticalSolvingPassDone(...);
   *** oppositeDimensionDependsOn(...);
   *** oppositeDimensionsTied(...);
   *** reset(...);
   *** resetAllConstraints(...);
   *** resetAnchor(...);
   *** resetAnchors(...);
   *** resetFinalResolution(...);
   *** resetSolverVariables(...);
   *** resetSolvingPassFlag(...);
   *** serialize(...);
   *** setDebugSolverName(...);
   *** setDimension(...);
   *** setDimensionRatio(...);
   *** setDimensionRatio(...);
   *** setFinalBaseline(...);
   *** setFinalFrame(...);
   *** setFinalHorizontal(...);
   *** setFinalLeft(...);
   *** setFinalTop(...);
   *** setFinalVertical(...);
   *** setFrame(...);
   *** setFrame(...);
   *** setGoneMargin(...);
   *** setHorizontalDimension(...);
   *** setHorizontalMatchStyle(...);
   *** setHorizontalWeight(...);
   *** setInBarrier(...);
   *** setLastMeasureSpec(...);
   *** setLength(...);
   *** setOffset(...);
   *** setOrigin(...);
   *** setVerticalDimension(...);
   *** setVerticalMatchStyle(...);
   *** setVerticalWeight(...);
   *** setX(...);
   *** setY(...);
   *** setupDimensionRatio(...);
   *** updateFromRuns(...);
   *** updateFromSolver(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getHorizontalGuidelines(...);
   *** isHeightMeasuredTooSmall(...);
   *** isWidthMeasuredTooSmall(...);
   *** getMeasurer(...);
   *** setMeasurer(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** isRtl(...);
   *** setRtl(...);
   *** getSystem(...);
   *** getVerticalGuidelines(...);
   *** addChildrenToSolver(...);
   *** addHorizontalWrapMaxVariable(...);
   *** addHorizontalWrapMinVariable(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** fillMetrics(...);
   *** handlesInternalConstraints(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measure(...);
   *** measure(...);
   *** optimizeFor(...);
   *** setPadding(...);
   *** setPass(...);
   *** updateChildrenFromSolver(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.Guideline
-keepclassmembers class androidx.constraintlayout.core.widgets.Guideline {
   <init>(...);
   *** getAnchor(...);
   *** isPercent(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRelativeBegin(...);
   *** getRelativeBehaviour(...);
   *** getRelativeEnd(...);
   *** getRelativePercent(...);
   *** cyclePosition(...);
   *** setFinalValue(...);
   *** setGuideBegin(...);
   *** setGuideEnd(...);
   *** setGuidePercent(...);
   *** setGuidePercent(...);
   *** setMinimumPosition(...);
}

-keep class androidx.constraintlayout.core.widgets.HelperWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.HelperWidget {
   <init>(...);
   *** add(...);
   *** addDependents(...);
   *** findGroupInDependents(...);
   *** removeAllIds(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.core.widgets.Helper
-keepclassmembers class androidx.constraintlayout.core.widgets.Helper {
}

-keep class androidx.constraintlayout.core.widgets.WidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.WidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getChildren(...);
   *** getRootConstraintContainer(...);
   *** add(...);
   *** add(...);
   *** layout(...);
   *** remove(...);
   *** removeAllChildren(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure {
   <init>(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure {
   <init>(...);
   *** solverMeasure(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.ChainRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.ChainRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph {
   <init>(...);
   *** buildGraph(...);
   *** buildGraph(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measureWidgets(...);
   *** setMeasurer(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyNode
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyNode {
   <init>(...);
   *** addDependency(...);
   *** clear(...);
   *** name(...);
   *** resolve(...);
   *** update(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Dependency
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Dependency {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup {
   <init>(...);
   *** isAuthoritative(...);
   *** setAuthoritative(...);
   *** getId(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** add(...);
   *** apply(...);
   *** cleanup(...);
   *** clear(...);
   *** intersectWith(...);
   *** measureWrap(...);
   *** moveTo(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
   <init>(...);
   *** isCenterConnection(...);
   *** isDimensionResolved(...);
   *** isResolved(...);
   *** getWrapDimension(...);
   *** addTarget(...);
   *** getLimitedDimension(...);
   *** getTarget(...);
   *** getTarget(...);
   *** update(...);
   *** updateRunCenter(...);
   *** updateRunEnd(...);
   *** updateRunStart(...);
   *** wrapSize(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
}

-keep class androidx.constraintlayout.core.state.Interpolator
-keepclassmembers class androidx.constraintlayout.core.state.Interpolator {
}

-keep class androidx.constraintlayout.core.state.Transition
-keepclassmembers class androidx.constraintlayout.core.state.Transition {
   <init>(...);
   *** getAutoTransition(...);
   *** hasPositionKeyframes(...);
   *** getInterpolator(...);
   *** isEmpty(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** addKeyAttribute(...);
   *** addKeyCycle(...);
   *** addKeyPosition(...);
   *** addKeyPosition(...);
   *** clear(...);
   *** contains(...);
   *** fillKeyPositions(...);
   *** findNextPosition(...);
   *** findPreviousPosition(...);
   *** getEnd(...);
   *** getEnd(...);
   *** getId(...);
   *** getInterpolated(...);
   *** getInterpolated(...);
   *** getInterpolator(...);
   *** getKeyFrames(...);
   *** getMotion(...);
   *** getNumberKeyPositions(...);
   *** getPath(...);
   *** getStart(...);
   *** getStart(...);
   *** interpolate(...);
   *** setTransitionProperties(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** updateFrom(...);
}

-keep class androidx.constraintlayout.core.state.WidgetFrame
-keepclassmembers class androidx.constraintlayout.core.state.WidgetFrame {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCustomAttributeNames(...);
   *** getId(...);
   *** isDefaultTransform(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** centerX(...);
   *** centerY(...);
   *** getCustomAttribute(...);
   *** getCustomColor(...);
   *** getCustomFloat(...);
   *** height(...);
   *** interpolate(...);
   *** serialize(...);
   *** serialize(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomValue(...);
   *** setValue(...);
   *** update(...);
   *** update(...);
   *** updateAttributes(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.parser.CLArray
-keepclassmembers class androidx.constraintlayout.core.parser.CLArray {
   <init>(...);
   *** allocate(...);
}

-keep class androidx.constraintlayout.core.parser.CLContainer
-keepclassmembers class androidx.constraintlayout.core.parser.CLContainer {
   <init>(...);
   *** add(...);
   *** allocate(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getArray(...);
   *** getArrayOrNull(...);
   *** getBoolean(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getFloat(...);
   *** getFloatOrNaN(...);
   *** getInt(...);
   *** getInt(...);
   *** getObject(...);
   *** getObject(...);
   *** getObjectOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getString(...);
   *** getString(...);
   *** getStringOrNull(...);
   *** getStringOrNull(...);
   *** has(...);
   *** names(...);
   *** put(...);
   *** putNumber(...);
   *** remove(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.parser.CLElement
-keepclassmembers class androidx.constraintlayout.core.parser.CLElement {
   <init>(...);
   *** getContainer(...);
   *** getDebugName(...);
   *** getEnd(...);
   *** setEnd(...);
   *** getFloat(...);
   *** getInt(...);
   *** isDone(...);
   *** isStarted(...);
   *** getLine(...);
   *** setLine(...);
   *** getStart(...);
   *** setStart(...);
   *** getStrClass(...);
   *** addIndent(...);
   *** content(...);
   *** notStarted(...);
   *** setContainer(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.parser.CLObject
-keepclassmembers class androidx.constraintlayout.core.parser.CLObject {
   <init>(...);
   *** allocate(...);
   *** iterator(...);
   *** toFormattedJSON(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isContinuous(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** diff(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** setColorValue(...);
   *** setFloatValue(...);
   *** setIntValue(...);
   *** setStringValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.CustomVariable
-keepclassmembers class androidx.constraintlayout.core.motion.CustomVariable {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBooleanValue(...);
   *** setBooleanValue(...);
   *** getColorValue(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
   *** getIntegerValue(...);
   *** isContinuous(...);
   *** getName(...);
   *** getStringValue(...);
   *** setStringValue(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyToWidget(...);
   *** colorString(...);
   *** copy(...);
   *** diff(...);
   *** getInterpolatedColor(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** rgbaTocColor(...);
   *** setIntValue(...);
   *** setInterpolatedValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.Motion
-keepclassmembers class androidx.constraintlayout.core.motion.Motion {
   <init>(...);
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** buildKeyFrames(...);
   *** buildPath(...);
   *** buildRect(...);
   *** getCenter(...);
   *** getId(...);
   *** getKeyFrame(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** interpolate(...);
   *** setEnd(...);
   *** setPathMotionArc(...);
   *** setStart(...);
   *** setStartState(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionPaths
-keepclassmembers class androidx.constraintlayout.core.motion.MotionPaths {
   <init>(...);
   <init>(...);
   *** applyParameters(...);
   *** compareTo(...);
   *** configureRelativeTo(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget {
   <init>(...);
   <init>(...);
   *** getAlpha(...);
   *** getBottom(...);
   *** getCustomAttributeNames(...);
   *** getHeight(...);
   *** getLeft(...);
   *** getName(...);
   *** getParent(...);
   *** getPivotX(...);
   *** setPivotX(...);
   *** getPivotY(...);
   *** setPivotY(...);
   *** getRight(...);
   *** getRotationX(...);
   *** setRotationX(...);
   *** getRotationY(...);
   *** setRotationY(...);
   *** getRotationZ(...);
   *** setRotationZ(...);
   *** getScaleX(...);
   *** setScaleX(...);
   *** getScaleY(...);
   *** setScaleY(...);
   *** getTop(...);
   *** getTranslationX(...);
   *** setTranslationX(...);
   *** getTranslationY(...);
   *** setTranslationY(...);
   *** getTranslationZ(...);
   *** setTranslationZ(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidgetFrame(...);
   *** getWidth(...);
   *** findViewById(...);
   *** getCustomAttribute(...);
   *** getId(...);
   *** getValueAttributes(...);
   *** getX(...);
   *** getY(...);
   *** layout(...);
   *** setBounds(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setInterpolatedValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValueAttributes(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   <init>(...);
   *** get(...);
   *** getArc(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.FloatRect
-keepclassmembers class androidx.constraintlayout.core.motion.utils.FloatRect {
   <init>(...);
   *** centerX(...);
   *** centerY(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCache
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCache {
   <init>(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
   <init>(...);
   *** getCurveFit(...);
   *** get(...);
   *** getSlope(...);
   *** makeCustomSpline(...);
   *** makeCustomSplineSet(...);
   *** makeSpline(...);
   *** setPoint(...);
   *** setProperty(...);
   *** setType(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedBundle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedBundle {
   <init>(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIfNotNull(...);
   *** applyDelta(...);
   *** applyDelta(...);
   *** clear(...);
   *** getInteger(...);
}

-keep class androidx.constraintlayout.core.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.core.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** getAttributeNames(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setViewId(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyPosition
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyPosition {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** intersects(...);
   *** positionAttributes(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}


# End of content from obj\Release\net8.0-android\android-arm64\proguard\proguard_project_references.cfg
# The proguard configuration file for the following section is obj\Release\net8.0-android\proguard\proguard_project_primary.cfg
-keep class androidx.activity.contextaware.OnContextAvailableListener { *; }
-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor { *; }
-keep class androidx.activity.result.ActivityResultCallback { *; }
-keep class androidx.appcompat.app.AlertDialog_IDialogInterfaceOnClickListenerImplementor { *; }
-keep class androidx.appcompat.app.AlertDialog_IDialogInterfaceOnCancelListenerImplementor { *; }
-keep class androidx.appcompat.app.AlertDialog_IDialogInterfaceOnMultiChoiceClickListenerImplementor { *; }
-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener { *; }
-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor { *; }
-keep class androidx.appcompat.app.ActionBar$OnNavigationListener { *; }
-keep class androidx.appcompat.app.ActionBar$TabListener { *; }
-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate { *; }
-keep class androidx.appcompat.app.AppCompatCallback { *; }
-keep class androidx.appcompat.widget.Toolbar_NavigationOnClickEventDispatcher { *; }
-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener { *; }
-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor { *; }
-keep class androidx.appcompat.widget.DecorToolbar { *; }
-keep class androidx.appcompat.view.ActionMode$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuBuilder$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuPresenter$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuPresenter { *; }
-keep class androidx.appcompat.view.menu.MenuView { *; }
-keep class androidx.constraintlayout.widget.SharedValues$SharedValuesListener { *; }
-keep class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker { *; }
-keep class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener { *; }
-keep class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor { *; }
-keep class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables { *; }
-keep class androidx.constraintlayout.core.widgets.Helper { *; }
-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer { *; }
-keep class androidx.constraintlayout.core.widgets.analyzer.Dependency { *; }
-keep class androidx.constraintlayout.core.state.Interpolator { *; }
-keep class androidx.constraintlayout.core.motion.utils.TypedValues { *; }
-keep class androidx.core.util.Consumer { *; }
-keep class androidx.core.util.Predicate { *; }
-keep class androidx.core.internal.view.SupportMenuItem { *; }
-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate { *; }
-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener { *; }
-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener { *; }
-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor { *; }
-keep class androidx.core.view.ActionProvider$VisibilityListener { *; }
-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor { *; }
-keep class androidx.core.view.MenuHost { *; }
-keep class androidx.core.view.MenuProvider { *; }
-keep class androidx.core.view.OnApplyWindowInsetsListener { *; }
-keep class androidx.core.view.OnReceiveContentListener { *; }
-keep class androidx.core.view.ViewPropertyAnimatorListener { *; }
-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener { *; }
-keep class androidx.core.view.WindowInsetsAnimationControlListenerCompat { *; }
-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat { *; }
-keep class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener { *; }
-keep class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor { *; }
-keep class androidx.core.view.accessibility.AccessibilityViewCommand { *; }
-keep class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition { *; }
-keep class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener { *; }
-keep class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor { *; }
-keep class androidx.customview.widget.Openable { *; }
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener { *; }
-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentManager$BackStackEntry { *; }
-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener { *; }
-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentOnAttachListener { *; }
-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentResultListener { *; }
-keep class androidx.lifecycle.LifecycleObserver { *; }
-keep class androidx.lifecycle.LifecycleOwner { *; }
-keep class androidx.lifecycle.Observer { *; }
-keep class androidx.lifecycle.ViewModelStoreOwner { *; }
-keep class androidx.lifecycle.ViewModelProvider$Factory { *; }
-keep class androidx.lifecycle.viewmodel.CreationExtras$Key { *; }
-keep class androidx.loader.content.Loader$OnLoadCanceledListener { *; }
-keep class androidx.loader.content.Loader$OnLoadCompleteListener { *; }
-keep class androidx.loader.app.LoaderManager$LoaderCallbacks { *; }
-keep class androidx.navigation.NavDirections { *; }
-keep class androidx.navigation.NavViewModelStoreProvider { *; }
-keep class androidx.navigation.Navigator$Extras { *; }
-keep class androidx.navigation.NavController$OnDestinationChangedListener { *; }
-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor { *; }
-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener { *; }
-keep class androidx.preference.Preference$OnPreferenceChangeListener { *; }
-keep class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor { *; }
-keep class androidx.preference.Preference$OnPreferenceClickListener { *; }
-keep class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor { *; }
-keep class androidx.preference.Preference$SummaryProvider { *; }
-keep class androidx.preference.PreferenceGroup$OnExpandButtonClickListener { *; }
-keep class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnNavigateToScreenListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback { *; }
-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener { *; }
-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry { *; }
-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor { *; }
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider { *; }
-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener { *; }
-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor { *; }
-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener { *; }
-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor { *; }
-keep class androidx.viewpager.widget.ViewPager$PageTransformer { *; }
-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer { *; }
-keep class com.google.android.material.shape.CornerSize { *; }
-keep class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator { *; }
-keep class com.google.android.material.color.DynamicColors$OnAppliedCallback { *; }
-keep class com.google.android.material.color.DynamicColors$Precondition { *; }
-keep class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener { *; }
-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor { *; }
-keep class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener { *; }
-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor { *; }
-keep class com.google.android.material.button.MaterialButton$OnCheckedChangeListener { *; }
-keep class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor { *; }
-keep class com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener { *; }
-keep class mono.com.google.android.material.behavior.SwipeDismissBehavior_OnDismissListenerImplementor { *; }
-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor { *; }
-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor { *; }
-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor { *; }
-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener { *; }
-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor { *; }
-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener { *; }
-keep class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy { *; }
-keep class com.google.android.material.snackbar.Snackbar_SnackbarActionClickImplementor { *; }
-keep class com.google.android.material.snackbar.ContentViewCallback { *; }
-keep class com.google.android.material.internal.StaticLayoutBuilderConfigurer { *; }
-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener { *; }
-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener { *; }
-keep class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer { *; }
-keep class kotlin.Function { *; }
-keep class kotlin.sequences.Sequence { *; }
-keep class kotlin.jvm.functions.Function0 { *; }
-keep class kotlin.jvm.functions.Function1 { *; }
-keep class kotlin.jvm.functions.Function2 { *; }
-keep class kotlin.coroutines.Continuation { *; }
-keep class kotlin.coroutines.CoroutineContext$Key { *; }
-keep class kotlin.coroutines.CoroutineContext { *; }
-keep class kotlinx.coroutines.flow.Flow { *; }
-keep class kotlinx.coroutines.flow.FlowCollector { *; }
-keep class kotlinx.coroutines.flow.SharedFlow { *; }
-keep class kotlinx.coroutines.flow.StateFlow { *; }
-keep class crc645b7583d1cb05319f.ActivityResultCallback { *; }
-keep class crc645b7583d1cb05319f.BaseActivity { *; }
-keep class crc645b7583d1cb05319f.ColorThemeListPreference { *; }
-keep class crc645b7583d1cb05319f.MainActivity { *; }
-keep class crc645b7583d1cb05319f.NavigationGraph8ApplicationNet8 { *; }
-keep class crc645b7583d1cb05319f.SimpleItemDecoration { *; }
-keep class crc645b7583d1cb05319f.SystemThemeListPreference { *; }
-keep class crc641b0f1e4458844c38.BooksFragment { *; }
-keep class crc641b0f1e4458844c38.GalleryFragment { *; }
-keep class crc641b0f1e4458844c38.HomeFragment { *; }
-keep class crc641b0f1e4458844c38.ImmersiveFragment { *; }
-keep class crc641b0f1e4458844c38.LeaderboardPagerFragment { *; }
-keep class crc641b0f1e4458844c38.LeaderboardPagerFragment_TabConfigurationStrategy { *; }
-keep class crc641b0f1e4458844c38.LeaderboardPagerFragment_ZoomOutPageTransformer { *; }
-keep class crc641b0f1e4458844c38.LeaderboardPagerFragment_OnPageChangeCallback { *; }
-keep class crc641b0f1e4458844c38.MaintenanceFileSelectionFragment { *; }
-keep class crc641b0f1e4458844c38.MaterialWidgetsFragment { *; }
-keep class crc641b0f1e4458844c38.PurchaseFragment { *; }
-keep class crc641b0f1e4458844c38.RaceResultFragment { *; }
-keep class crc641b0f1e4458844c38.RegisterFragment { *; }
-keep class crc641b0f1e4458844c38.SampleFragment1 { *; }
-keep class crc641b0f1e4458844c38.SampleFragment2 { *; }
-keep class crc641b0f1e4458844c38.SampleFragment3 { *; }
-keep class crc641b0f1e4458844c38.SettingsFragment { *; }
-keep class crc641b0f1e4458844c38.SlideshowFragment { *; }
-keep class crc647b9b88425b4d5e7a.BasicDialogFragment { *; }
-keep class crc647b9b88425b4d5e7a.HelperExplanationDialogFragment { *; }
-keep class crc6466c7a519bc75f969.BookAdapter { *; }
-keep class crc6466c7a519bc75f969.BookAdapter_BookViewHolder { *; }
-keep class crc6466c7a519bc75f969.LeaderboardViewPagerStateAdapter { *; }

# End of content from obj\Release\net8.0-android\proguard\proguard_project_primary.cfg
# The proguard configuration file for the following section is proguard.cfg
-printconfiguration config_navigation8net8.txt
-printseeds seeds.txt
-printusage usage.txt

#usage.txt - this file contains the code that was removed from the apk
#seeds.txt - this file has a list of classes and class members which were not obfuscated
#mappings.txt - this file provides the translation between the original and the obfuscated classes, methods, field names. Not applicable to xamarin, because we don't obfuscate.

# Added 20/06/2021 To upload a mapping.txt file
#Open the Play Console.
#Select an app.
#On the left menu, select Release > App bundle explorer.
#Select the Downloads tab, and scroll down to the 'Assets' section. Click the upload arrow for the mapping file or the debug symbols as applicable to upload the deobfuscation for the version of your app.

# 04/10/2023 
# Had to add for java.lang.ClassNotFoundException: android.view.View_IOnClickListenerImplementor as it immediately crashed when selecting the MaterialWidgetsFragment 
# even though we don't use  IOnClickListener android.view.View_IOnClickListenerImplementor
# Added both because another app had the same problem with Item.LongClick event handler
-keep class android.view.View_IOnClickListenerImplementor
-keep class android.view.View_IOnLongClickListenerImplementor
# End of content from proguard.cfg
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.versionedparcelable\1.1.1.20\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.versionedparcelable\1.1.1.20\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.startup.startupruntime\1.1.1.8\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.startup.startupruntime\1.1.1.8\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.runtime\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.runtime\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.core\1.12.0.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.core\1.12.0.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.savedstate\1.2.1.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.savedstate\1.2.1.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.recyclerview\1.3.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.recyclerview\1.3.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodel\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodel\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodelsavedstate\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodelsavedstate\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.fragment\1.6.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# FragmentTransition will reflectively lookup:
# androidx.transition.FragmentTransitionSupport
# We should ensure that we keep the constructor if the code using this is alive
-if class androidx.fragment.app.FragmentTransition {
   private static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl();
}
-keep class androidx.transition.FragmentTransitionSupport {
    public <init>();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.fragment\1.6.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.vectordrawable.animated\1.1.0.20\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.vectordrawable.animated\1.1.0.20\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.transition\1.4.1.13\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.transition\1.4.1.13\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.process\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.process\2.6.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.coordinatorlayout\1.2.0.8\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.coordinatorlayout\1.2.0.8\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.appcompat\1.6.1.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.appcompat\1.6.1.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.google.android.material\1.9.0.3\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\Users\gmcke\.nuget\packages\xamarin.google.android.material\1.9.0.3\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.window.extensions.core.core\1.0.0.2\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2022 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# These interfaces must be kept for the client library to invoke methods in extensions.
-keep interface androidx.window.extensions.core.util.function.Consumer {
  public void accept(***);
}
-keep interface androidx.window.extensions.core.util.function.Predicate {
  public boolean test(***);
}
-keep interface androidx.window.extensions.core.util.function.Function {
  public *** apply(***);
}
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.window.extensions.core.core\1.0.0.2\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.window\1.1.0.2\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.adapter.sidecar.SidecarCompat {
  public *** setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback,
 androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback {
  public *** onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public *** onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.window\1.1.0.2\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.preference\1.2.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preference objects are inflated via reflection
-keep public class androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keep public class * extends androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.preference\1.2.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.common\2.7.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.common\2.7.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.ui\2.7.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.ui\2.7.2.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\74\jl\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\74\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\76\jl\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\76\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\79\jl\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\79\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\82\jl\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\82\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\85\jl\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\85\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\88\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\88\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\89\jl\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\89\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\92\jl\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\92\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\94\jl\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# FragmentTransition will reflectively lookup:
# androidx.transition.FragmentTransitionSupport
# We should ensure that we keep the constructor if the code using this is alive
-if class androidx.fragment.app.FragmentTransition {
   private static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl();
}
-keep class androidx.transition.FragmentTransitionSupport {
    public <init>();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\94\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\97\jl\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\97\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\98\jl\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\98\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\101\jl\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\101\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\109\jl\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\109\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\111\jl\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\111\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\114\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\114\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\115\jl\proguard.txt
# Copyright (C) 2022 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# These interfaces must be kept for the client library to invoke methods in extensions.
-keep interface androidx.window.extensions.core.util.function.Consumer {
  public void accept(***);
}
-keep interface androidx.window.extensions.core.util.function.Predicate {
  public boolean test(***);
}
-keep interface androidx.window.extensions.core.util.function.Function {
  public *** apply(***);
}
# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\115\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\116\jl\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.adapter.sidecar.SidecarCompat {
  public *** setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback,
 androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback {
  public *** onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public *** onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\116\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\124\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preference objects are inflated via reflection
-keep public class androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keep public class * extends androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\124\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\125\jl\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\125\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\127\jl\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\lp\127\jl\proguard.txt
# The proguard configuration file for the following section is obj\Release\net8.0-android\aapt_rules.txt
#Auto Generated file. Do not Edit.
# Data from C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\aapt_rules.txt
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class androidx.startup.InitializationProvider { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class crc645b7583d1cb05319f.BaseActivity { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class crc645b7583d1cb05319f.MainActivity { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class crc645b7583d1cb05319f.NavigationGraph8ApplicationNet8 { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\android\manifest\AndroidManifest.xml:19
-keep class mono.MonoRuntimeProvider { <init>(); }
# Referenced at res/layout/abc_alert_dialog_button_bar_material.xml:43
# Referenced at res/layout/abc_alert_dialog_material.xml:55
# Referenced at res/layout/abc_alert_dialog_title_material.xml:57
# Referenced at res/layout/m3_alert_dialog.xml:54
# Referenced at res/layout/m3_alert_dialog_actions.xml:43
# Referenced at res/layout/m3_alert_dialog_title.xml:41
# Referenced at res/layout/mtrl_alert_dialog.xml:51
# Referenced at res/layout/mtrl_alert_dialog_actions.xml:45
# Referenced at res/layout/mtrl_alert_dialog_title.xml:41
-keep class android.widget.Space { <init>(...); }

# Referenced at res/layout/abc_select_dialog_material.xml:23
-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(...); }

# Referenced at res/layout/abc_action_menu_item_layout.xml:17
-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(...); }

# Referenced at res/layout/abc_expanded_menu_layout.xml:17
-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(...); }

# Referenced at res/layout/abc_cascading_menu_item_layout.xml:20
# Referenced at res/layout/abc_list_menu_item_layout.xml:17
# Referenced at res/layout/abc_popup_menu_item_layout.xml:17
-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(...); }

# Referenced at res/layout-v26/abc_screen_toolbar.xml:27
-keep class androidx.appcompat.widget.ActionBarContainer { <init>(...); }

# Referenced at res/layout/abc_action_mode_bar.xml:19
# Referenced at res/layout-v26/abc_screen_toolbar.xml:44
-keep class androidx.appcompat.widget.ActionBarContextView { <init>(...); }

# Referenced at res/layout-v26/abc_screen_toolbar.xml:17
-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(...); }

# Referenced at res/layout/abc_action_menu_layout.xml:17
-keep class androidx.appcompat.widget.ActionMenuView { <init>(...); }

# Referenced at res/layout/abc_activity_chooser_view.xml:19
-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_material.xml:18
# Referenced at res/layout/m3_alert_dialog.xml:17
# Referenced at res/layout/mtrl_alert_dialog.xml:17
-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_maintenance_file_selection.xml:1
-keep class androidx.appcompat.widget.AppCompatTextView { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_button_bar_material.xml:26
# Referenced at res/layout/m3_alert_dialog_actions.xml:26
# Referenced at res/layout/mtrl_alert_dialog_actions.xml:26
-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(...); }

# Referenced at res/layout/abc_screen_content_include.xml:19
-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_title_material.xml:45
# Referenced at res/layout/m3_alert_dialog_title.xml:36
# Referenced at res/layout/mtrl_alert_dialog_title.xml:36
-keep class androidx.appcompat.widget.DialogTitle { <init>(...); }

# Referenced at res/layout/abc_screen_simple_overlay_action_mode.xml:23
-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(...); }

# Referenced at res/layout/abc_dialog_title_material.xml:22
# Referenced at res/layout/abc_screen_simple.xml:17
-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(...); }

# Referenced at res/layout/abc_search_view.xml:75
-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(...); }

# Referenced at res/layout/preference_widget_switch_compat.xml:20
-keep class androidx.appcompat.widget.SwitchCompat { <init>(...); }

# Referenced at res/layout-v26/abc_screen_toolbar.xml:37
-keep class androidx.appcompat.widget.Toolbar { <init>(...); }

# Referenced at res/layout/abc_screen_simple.xml:25
# Referenced at res/layout/abc_screen_simple_overlay_action_mode.xml:32
-keep class androidx.appcompat.widget.ViewStubCompat { <init>(...); }

# Referenced at res/layout/material_timepicker.xml:25
-keep class androidx.constraintlayout.helper.widget.Flow { <init>(...); }

# Referenced at res/layout/material_timepicker_dialog.xml:38
-keep class androidx.constraintlayout.widget.Barrier { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\book_item.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\content_main.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_books.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_gallery.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_home.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_leaderboard.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_leaderboard_viewpager.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_maintenance_file_selection.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_purchase.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_raceresult.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_register.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_sample1.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_sample2.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_sample3.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_slideshow.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\generic_dialog.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\generic_dialog_switch_scrollable.xml:1
# Referenced at res/layout/material_timepicker_dialog.xml:18
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\nav_header.xml:1
-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\app_bar_main.xml:1
# Referenced at res/layout/design_bottom_sheet_dialog.xml:26
# Referenced at res/layout/m3_side_sheet_dialog.xml:26
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_material.xml:44
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\generic_dialog.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\generic_dialog_switch_scrollable.xml:1
# Referenced at res/layout/m3_alert_dialog.xml:43
# Referenced at res/layout/mtrl_alert_dialog.xml:40
-keep class androidx.core.widget.NestedScrollView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\activity_main.xml:1
-keep class androidx.drawerlayout.widget.DrawerLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\content_main.xml:1
# Referenced at res/layout/mtrl_picker_dialog.xml:31
# Referenced at res/layout/mtrl_picker_fullscreen.xml:27
-keep class androidx.fragment.app.FragmentContainerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\content_main.xml:1
-keep class androidx.navigation.fragment.NavHostFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\xml\preferences.xml:1
-keep class androidx.preference.CheckBoxPreference { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\xml\preferences.xml:1
-keep class androidx.preference.PreferenceCategory { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\xml\preferences.xml:1
-keep class androidx.preference.PreferenceScreen { <init>(...); }

# Referenced at res/layout/preference_widget_seekbar.xml:70
# Referenced at res/layout/preference_widget_seekbar_material.xml:78
-keep class androidx.preference.UnPressableLinearLayout { <init>(...); }

# Referenced at res/layout/image_frame.xml:33
# Referenced at res/layout/preference.xml:32
# Referenced at res/layout/preference_dropdown.xml:39
-keep class androidx.preference.internal.PreferenceImageView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_books.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_maintenance_file_selection.xml:1
# Referenced at res/layout/mtrl_calendar_horizontal.xml:29
# Referenced at res/layout/mtrl_calendar_months.xml:18
# Referenced at res/layout/preference_recyclerview.xml:18
-keep class androidx.recyclerview.widget.RecyclerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_leaderboard_viewpager.xml:1
-keep class androidx.viewpager2.widget.ViewPager2 { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\app_bar_main.xml:1
-keep class com.google.android.material.appbar.AppBarLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\app_bar_main.xml:1
# Referenced at res/layout/mtrl_search_view.xml:59
-keep class com.google.android.material.appbar.MaterialToolbar { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\content_main.xml:1
-keep class com.google.android.material.bottomnavigation.BottomNavigationView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
# Referenced at res/layout/material_clock_period_toggle.xml:31
# Referenced at res/layout/material_timepicker_dialog.xml:73
# Referenced at res/layout/mtrl_calendar_month_navigation.xml:32
# Referenced at res/layout/mtrl_picker_header_fullscreen.xml:37
-keep class com.google.android.material.button.MaterialButton { <init>(...); }

# Referenced at res/layout/material_clock_period_toggle.xml:18
# Referenced at res/layout-land/material_clock_period_toggle_land.xml:18
-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
-keep class com.google.android.material.checkbox.MaterialCheckBox { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
# Referenced at res/layout/material_time_chip.xml:17
-keep class com.google.android.material.chip.Chip { <init>(...); }

# Referenced at res/layout-v26/mtrl_calendar_month.xml:18
-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
-keep class com.google.android.material.floatingactionbutton.FloatingActionButton { <init>(...); }

# Referenced at res/layout/design_bottom_navigation_item.xml:40
# Referenced at res/layout/mtrl_navigation_rail_item.xml:39
-keep class com.google.android.material.internal.BaselineLayout { <init>(...); }

# Referenced at res/layout/design_text_input_end_icon.xml:18
# Referenced at res/layout/design_text_input_start_icon.xml:18
# Referenced at res/layout/mtrl_picker_header_toggle.xml:18
-keep class com.google.android.material.internal.CheckableImageButton { <init>(...); }

# Referenced at res/layout/mtrl_search_view.xml:28
-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(...); }

# Referenced at res/layout/design_navigation_item.xml:17
-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(...); }

# Referenced at res/layout/design_navigation_menu.xml:17
-keep class com.google.android.material.internal.NavigationMenuView { <init>(...); }

# Referenced at res/layout/mtrl_search_view.xml:120
-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_widgets.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\generic_dialog_switch_scrollable.xml:1
-keep class com.google.android.material.materialswitch.MaterialSwitch { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\activity_main.xml:1
-keep class com.google.android.material.navigation.NavigationView { <init>(...); }

# Referenced at res/layout/design_layout_snackbar.xml:18
# Referenced at res/layout/mtrl_layout_snackbar.xml:18
-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(...); }

# Referenced at res/layout/design_layout_snackbar_include.xml:18
# Referenced at res/layout/mtrl_layout_snackbar_include.xml:18
-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\layout\fragment_leaderboard_viewpager.xml:1
-keep class com.google.android.material.tabs.TabLayout { <init>(...); }

# Referenced at res/layout/material_time_input.xml:25
# Referenced at res/layout/mtrl_picker_text_input_date.xml:31
# Referenced at res/layout/mtrl_picker_text_input_date_range.xml:35
-keep class com.google.android.material.textfield.TextInputEditText { <init>(...); }

# Referenced at res/layout/material_time_input.xml:18
# Referenced at res/layout/mtrl_picker_text_input_date.xml:26
# Referenced at res/layout/mtrl_picker_text_input_date_range.xml:29
-keep class com.google.android.material.textfield.TextInputLayout { <init>(...); }

# Referenced at res/layout/material_chip_input_combo.xml:18
-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(...); }

# Referenced at res/layout/material_timepicker.xml:44
-keep class com.google.android.material.timepicker.ClockFaceView { <init>(...); }

# Referenced at res/layout/material_clockface_view.xml:25
-keep class com.google.android.material.timepicker.ClockHandView { <init>(...); }

# Referenced at res/layout/material_timepicker_dialog.xml:46
-keep class com.google.android.material.timepicker.TimePickerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.BooksFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.GalleryFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.HomeFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.LeaderboardPagerFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.MaintenanceFileSelectionFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.MaterialWidgetsFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.PurchaseFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.RaceResultFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.RegisterFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.SettingsFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\navigation\nav_graph.xml:1
-keep class crc641b0f1e4458844c38.SlideshowFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\xml\preferences.xml:1
-keep class crc645b7583d1cb05319f.ColorThemeListPreference { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph8Net8\obj\Release\net8.0-android\res\xml\preferences.xml:1
-keep class crc645b7583d1cb05319f.SystemThemeListPreference { <init>(...); }


# End of content from obj\Release\net8.0-android\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.core.jvm\1.7.3.1\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-core-jvm-1.7.3.jar:META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.core.jvm\1.7.3.1\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-core-jvm-1.7.3.jar:META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.android\1.7.3.1\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-android-1.7.3.jar:META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.android\1.7.3.1\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-android-1.7.3.jar:META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation.jvm\1.7.0.1\buildTransitive\net6.0-android31.0\..\..\jar\androidx.annotation.annotation-jvm.jar:META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation.jvm\1.7.0.1\buildTransitive\net6.0-android31.0\..\..\jar\androidx.annotation.annotation-jvm.jar:META-INF/proguard/androidx-annotations.pro